{"version":3,"sources":["../../node_modules/@chakra-ui/theme-tools/dist/esm/component.js","../../src/theme.ts","../../node_modules/@chakra-ui/react-utils/dist/esm/refs.js","../../node_modules/@chakra-ui/utils/dist/esm/assertion.js","../../src/use-select.ts","../../node_modules/@chakra-ui/react-utils/dist/esm/context.js","../../src/MultiSelect.tsx","App.tsx","index.tsx"],"names":["mode","light","dark","props","colorMode","baseStyleList","bg","boxShadow","color","w","py","zIndex","borderRadius","borderWidth","maxH","overflowY","baseStyleSelectedList","d","flex","flexWrap","alignItems","baseStyleLabel","fontSize","marginEnd","mb","fontWeight","transition","opacity","_disabled","baseStyleItem","cursor","_focus","_active","_expanded","baseStyleSelectedItem","variant","colorscheme","baseStyleButton","_hover","baseStyleControl","h","baseStyleCombobox","baseStyleGroupTitle","baseStyleDivider","border","borderColor","my","defaultProps","size","parts","sizes","sm","control","minH","px","spacing","input","m","combobox","item","selectedItem","selectedList","groupTitle","mx","md","lg","baseStyle","list","button","bgColor","appearance","outline","divider","label","assignRef","ref","value","isFunction","current","error","Error","mergeRefs","_len","arguments","length","refs","Array","_key","node","forEach","ChangeActions","SelectActions","defaultMultiValue","defaultOptions","initialState","searchValue","resolvedSearchValue","isOpen","highlightedIndex","defaultStateReducer","_","newState","defaultScrollToIndex","defaultGetOption","option","defaultGetDebounce","options","defaultFilterFn","getOption","a","strict","errorMessage","name","Context","undefined","displayName","Provider","useContext","context","captureStackTrace","createContext","useSelect","create","single","getDebounce","stateReducer","filterFn","scrollToIndex","shiftAmount","placement","reducerRef","useRef","useState","state","useCallback","_setState","old","updater","useHoistedState","multi","optionsRef","inputRef","onBlurRef","onChangeRef","filterFnRef","scrollToIndexRef","popper","usePopper","originalOptions","useMemo","v","duplicates","selectedOption","val","_new","userKeys","setOpen","newIsOpen","setState","setResolvedSearch","fn","time","fnRef","useEffect","clearTimeout","Promise","setTimeout","resolve","err","reject","useDebounce","setSearch","highlightIndex","Math","selectIndex","index","action","removeValue","i","handleSearchValueChange","e","handleSearchClick","handleSearchFocus","ArrowUp","defaultShift","meta","amount","defaultMeta","ArrowDown","getKeyProps","PageUp","PageDown","Home","End","Enter","Escape","Tab","Backspace","onKeyDown","rest","shiftKey","metaKey","handler","keyCode","key","shift","localRef","elRef","userRef","handle","isTouch","el","document","enable","useClickOutsideRef","visibleOptions","getInputProps","refKey","onBlur","onChange","onFocus","onClick","getOptionProps","onMouseEnter","Select","children","styles","useMultiStyleConfig","ctx","omitThemingProps","_jsx","SelectProvider","StylesProvider","chakra","div","pos","SelectLabel","memo","labelProps","useStyles","__css","useSelectLabel","SelectOptionItem","useSelectContext","highlighted","useSelectItem","selectedItemRef","li","itemProps","SelectList","useSelectList","listRef","dropdownVisible","optionItemProps","optionItem","ul","listStyle","position","display","listProps","itemKey","restItemProps","SelectToggleIcon","viewBox","width","height","fill","SelectInput","inputProps","useSelectInput","SelectedItem","useSelectedItem","_jsxs","Tag","TagLabel","TagCloseButton","SelectToggleButton","useSelectButton","ariaLabel","Icon","IconButton","icon","buttonProps","SelectedList","selectedItems","useSelectedList","Box","selectedListProps","SelectCombobox","useSelectCombobox","HStack","comboboxProps","SelectControl","forwardRef","useSelectControl","Input","controlRef","as","MultiSelect","theme","extendTheme","components","MultiSelectTheme","ColorModeToggleBar","toggleColorMode","useColorMode","nextMode","useColorModeValue","justify","marginLeft","map","toLowerCase","StatefulMultiSelect","_onChange","_value","setValue","next","App","initialColorMode","justifyContent","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.967df38c.chunk.js","sourcesContent":["import { runIfFn } from \"@chakra-ui/utils\";\nexport { runIfFn };\nexport function mode(light, dark) {\n  return props => props.colorMode === \"dark\" ? dark : light;\n}\nexport function orient(options) {\n  var {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  if (!orientation) return {};\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\n//# sourceMappingURL=component.js.map","import { mode } from '@chakra-ui/theme-tools'\n\nconst parts = [\n  'item',\n  'selectedItem',\n  'list',\n  'selectedList',\n  'combobox',\n  'control',\n  'input',\n  'button',\n  'groupTitle',\n  'divider',\n  'label',\n]\n\nfunction baseStyleList(props: Record<string, any>) {\n  return {\n    bg: mode(`#fff`, `gray.700`)(props),\n    boxShadow: mode(`sm`, `dark-lg`)(props),\n    color: 'inherit',\n    w: 'full',\n    py: '2',\n    zIndex: 1,\n    borderRadius: 'md',\n    borderWidth: '1px',\n    maxH: '64',\n    overflowY: 'auto',\n  }\n}\n\nconst baseStyleSelectedList = {\n  d: 'flex',\n  flex: 1,\n  flexWrap: 'wrap',\n  alignItems: 'center',\n}\n\nconst baseStyleLabel = {\n  fontSize: 'md',\n  marginEnd: 3,\n  mb: 2,\n  fontWeight: 'medium',\n  transition: 'all 0.2s',\n  opacity: 1,\n  _disabled: {\n    opacity: 0.4,\n  },\n}\n\nfunction baseStyleItem(props: Record<string, any>) {\n  return {\n    cursor: 'pointer',\n    transition: 'background 50ms ease-out',\n    _focus: {\n      bg: mode(`gray.100`, `whiteAlpha.100`)(props),\n    },\n    _active: {\n      bg: mode(`gray.100`, `whiteAlpha.100`)(props),\n    },\n    _expanded: {\n      bg: mode(`gray.100`, `whiteAlpha.100`)(props),\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: 'not-allowed',\n    },\n  }\n}\n\nfunction baseStyleSelectedItem(props: Record<string, any>) {\n  return {\n    borderRadius: 'full',\n    variant: 'solid',\n    colorscheme: props.colorscheme,\n  }\n}\n\nfunction baseStyleButton(props: Record<string, any>) {\n  return {\n    variant: 'ghost',\n    _hover: {\n      bg: 'transparent',\n    },\n    _focus: {\n      bg: 'transparent',\n    },\n    _active: {\n      bg: 'transparent',\n    },\n    colorscheme: props.colorscheme,\n  }\n}\n\nconst baseStyleControl = {\n  h: 'auto',\n}\n\n// eslint-disable-next-line\nconst baseStyleInput = (_props: Record<string, any>) => ({\n  bgColor: 'transparent',\n  appearance: 'none',\n  flex: 1,\n  outline: 0,\n})\n\nconst baseStyleCombobox = {\n  d: 'flex',\n  alignItems: 'center',\n}\n\nconst baseStyleGroupTitle = {\n  fontWeight: 'semibold',\n}\n\nconst baseStyleDivider = {\n  d: 'inline',\n  h: 'full',\n  border: 0,\n  borderColor: 'inherit',\n  my: 1,\n  opacity: 0.8,\n}\n\nconst baseStyle = (props: Record<string, any>) => ({\n  list: baseStyleList(props),\n  selectedList: baseStyleSelectedList,\n  item: baseStyleItem(props),\n  selectedItem: baseStyleSelectedItem(props),\n  button: baseStyleButton(props),\n  combobox: baseStyleCombobox,\n  control: baseStyleControl,\n  input: baseStyleInput(props),\n  groupTitle: baseStyleGroupTitle,\n  divider: baseStyleDivider,\n  label: baseStyleLabel,\n})\n\nexport const sizes = {\n  sm: {\n    control: {\n      minH: 8,\n      px: 1,\n      spacing: 1,\n    },\n    input: {\n      m: 'px',\n    },\n    combobox: {\n      spacing: '1',\n    },\n    item: {\n      py: 1,\n      px: 2,\n    },\n    selectedItem: {\n      m: 'px',\n    },\n    selectedList: {\n      py: 'px',\n    },\n    groupTitle: {\n      mx: 2,\n      my: 1,\n      fontSize: 'sm',\n    },\n  },\n  md: {\n    control: {\n      minH: 10,\n      px: 1,\n      spacing: 1,\n    },\n    input: {\n      m: '2px',\n    },\n    combobox: {\n      spacing: '1',\n    },\n    item: {\n      py: 2,\n      px: 3,\n    },\n    selectedItem: {\n      m: '2px',\n    },\n    selectedList: {\n      py: '2px',\n    },\n    groupTitle: {\n      mx: 4,\n      my: 2,\n      fontSize: 'sm',\n    },\n  },\n  lg: {\n    control: {\n      minH: 12,\n      px: 2,\n      spacing: 2,\n    },\n    input: {\n      m: 1,\n    },\n    combobox: {\n      spacing: '2',\n    },\n    item: {\n      py: 2,\n      px: 3,\n    },\n    selectedItem: {\n      m: 1,\n    },\n    selectedList: {\n      py: 1,\n    },\n    groupTitle: {\n      mx: 4,\n      my: 2,\n      fontSize: 'sm',\n    },\n  },\n}\n\nexport default {\n  defaultProps: {\n    size: 'md',\n  },\n  parts,\n  sizes,\n  baseStyle,\n}\n","import { isFunction } from \"@chakra-ui/utils\";\n\n/**\n * Assigns a value to a ref function or object\n *\n * @param ref the ref to assign to\n * @param value the value\n */\nexport function assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (isFunction(ref)) {\n    ref(value);\n    return;\n  }\n\n  try {\n    // @ts-ignore\n    ref.current = value;\n  } catch (error) {\n    throw new Error(\"Cannot assign value '\" + value + \"' to ref '\" + ref + \"'\");\n  }\n}\n/**\n * Combine multiple React refs into a single ref function.\n * This is used mostly when you need to allow consumers forward refs to\n * internal components\n *\n * @param refs refs to assign to value to\n */\n\nexport function mergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return node => {\n    refs.forEach(ref => assignRef(ref, node));\n  };\n}\n//# sourceMappingURL=refs.js.map","// Number assertions\nexport function isNumber(value) {\n  return typeof value === \"number\";\n}\nexport function isNotNumber(value) {\n  return typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value);\n}\nexport function isNumeric(value) {\n  return value != null && value - parseFloat(value) + 1 >= 0;\n} // Array assertions\n\nexport function isArray(value) {\n  return Array.isArray(value);\n}\nexport function isEmptyArray(value) {\n  return isArray(value) && value.length === 0;\n} // Function assertions\n\nexport function isFunction(value) {\n  return typeof value === \"function\";\n} // Generic assertions\n\nexport function isDefined(value) {\n  return typeof value !== \"undefined\" && value !== undefined;\n}\nexport function isUndefined(value) {\n  return typeof value === \"undefined\" || value === undefined;\n} // Object assertions\n\nexport function isObject(value) {\n  var type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !isArray(value);\n}\nexport function isEmptyObject(value) {\n  return isObject(value) && Object.keys(value).length === 0;\n}\nexport function isNotEmptyObject(value) {\n  return value && !isEmptyObject(value);\n}\nexport function isNull(value) {\n  return value == null;\n} // String assertions\n\nexport function isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\nexport function isCssVar(value) {\n  return /^var\\(--.+\\)$/.test(value);\n} // Empty assertions\n\nexport function isEmpty(value) {\n  if (isArray(value)) return isEmptyArray(value);\n  if (isObject(value)) return isEmptyObject(value);\n  if (value == null || value === \"\") return true;\n  return false;\n}\nexport var __DEV__ = process.env.NODE_ENV !== \"production\";\nexport var __TEST__ = process.env.NODE_ENV === \"test\";\nexport function isRefObject(val) {\n  return \"current\" in val;\n}\nexport function isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\n//# sourceMappingURL=assertion.js.map","import {\n  usePopper,\n  UsePopperProps,\n  UsePopperReturn,\n  useStyles,\n} from '@chakra-ui/react'\nimport { EventKeys } from '@chakra-ui/utils'\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils'\nimport {\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n  useMemo,\n  MutableRefObject,\n} from 'react'\n\nexport interface Option {\n  label: string\n  value: string | number\n}\n\nexport interface SelectState {\n  searchValue: string\n  resolvedSearchValue: string\n  isOpen: boolean\n  highlightedIndex: number\n}\n\ntype AnyFunc = (...args: any[]) => any\n\nexport interface KeyMeta {\n  key?: EventKeys\n  keyCode?: EventKeys\n  shift?: boolean\n  meta?: boolean\n}\n\nexport type KeyboardEventHandler = (e: KeyboardEvent) => void\n\nexport type KeyHandler = () => void\n\nexport type ScrollToIndex = (index: number) => void\n\nexport type GetDebounce = (options: Option[]) => number\n\nexport enum ChangeActions {\n  Create = 'create', // eslint-disable-line\n  Remove = 'remove', // eslint-disable-line\n  Select = 'select', // eslint-disable-line\n}\n\nexport type SelectOnChange = (\n  value: string | number | Array<string | number>,\n  change?: {\n    action: ChangeActions\n    value: any\n  }\n) => void\n\nexport type GetOption = (option: string | { label: string; value: any }) => {\n  label: string\n  value: any\n}\n\nexport type SelectFilter = (\n  options: Option[],\n  searchValue: string | number,\n  getOption: GetOption\n) => Option[]\n\nexport type SelectRemoveValue = (index: number) => void\n\nexport type SelectSetOpen = (open: boolean) => void\n\nexport type SelectSetSearch = (searchValue: string) => void\n\nexport enum SelectActions {\n  SetOpen = 'setOpen', // eslint-disable-line\n  SetSearch = 'setSearch', // eslint-disable-line\n  HighlightIndex = 'highlightIndex', // eslint-disable-line\n}\n\nexport type SelectStateUpdater = (\n  updater: (old: SelectState) => SelectState,\n  action: SelectActions\n) => void\n\nexport type StateReducer = (\n  old: SelectState,\n  newState: SelectState,\n  action: SelectActions\n) => SelectState\n\nconst defaultMultiValue: any[] = []\nconst defaultOptions: Option[] = []\n\nconst initialState: SelectState = {\n  searchValue: '',\n  resolvedSearchValue: '',\n  isOpen: false,\n  highlightedIndex: 0,\n}\n\nconst defaultStateReducer: StateReducer = (_, newState) => newState\nconst defaultScrollToIndex: ScrollToIndex = () => null\nconst defaultGetOption: GetOption = (option) =>\n  typeof option === 'string' ? { label: option, value: option } : option\nconst defaultGetDebounce: GetDebounce = (options) =>\n  options.length > 10000 ? 1000 : options.length > 1000 ? 200 : 0\n\nconst defaultFilterFn: SelectFilter = (options, searchValue, getOption) => {\n  return options\n    .filter((option) =>\n      getOption(option)\n        .value.toString()\n        .toLowerCase()\n        .includes(searchValue.toString().toLowerCase())\n    )\n    .sort((a) => {\n      return getOption(a)\n        .value.toString()\n        .toLowerCase()\n        .indexOf(searchValue.toString().toLowerCase())\n    })\n}\n\nfunction useDebounce(fn: AnyFunc, time = 0) {\n  const ref = useRef(null)\n  const fnRef = useRef()\n\n  fnRef.current = fn as any\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(ref.current as unknown as number)\n    }\n  }, [time])\n\n  return useCallback(\n    async (...args) => {\n      if (ref.current) {\n        clearTimeout(ref.current as unknown as number)\n      }\n      return new Promise((resolve, reject) => {\n        ref.current = setTimeout(() => {\n          ref.current = null\n          try {\n            resolve((fnRef.current as unknown as AnyFunc)(...args))\n          } catch (err) {\n            reject(err)\n          }\n        }, time) as any\n      })\n    },\n    [time]\n  )\n}\n\nfunction useHoistedState(\n  initialState: SelectState,\n  reducer: StateReducer\n): [SelectState, SelectStateUpdater] {\n  const reducerRef = useRef()\n  ;(reducerRef.current as any) = reducer\n  const [state, _setState] = useState(initialState)\n  const setState = useCallback(\n    (updater, action) => {\n      if (!action) {\n        throw new Error('An action type is required to update the state')\n      }\n      return _setState((old: SelectState) =>\n        (reducerRef.current as unknown as StateReducer)(\n          old,\n          updater(old),\n          action\n        )\n      )\n    },\n    [_setState]\n  )\n  return [state, setState]\n}\n\nconst useKeys = (\n  userKeys: {\n    [K in EventKeys]: (opts: { shift: any; meta: any }, e?: any) => K | any\n  }\n) => {\n  return ({ onKeyDown, ...rest } = {} as any) => {\n    return {\n      ...rest,\n      onKeyDown: (e: KeyboardEvent) => {\n        const { keyCode, key, shiftKey: shift, metaKey: meta } = e\n        const handler = userKeys[key] || userKeys[keyCode]\n        if (handler) {\n          handler(\n            {\n              keyCode,\n              key,\n              shift,\n              meta,\n            },\n            e\n          )\n        }\n        if (onKeyDown) {\n          onKeyDown(e)\n        }\n      },\n    }\n  }\n}\n\nexport interface UseSelectProps extends UsePopperProps {\n  onChange: SelectOnChange\n  single?: boolean\n  create?: boolean\n  duplicates?: boolean\n  options?: Option[]\n  value?: any\n  shiftAmount?: number\n  getOption?: GetOption\n  getDebounce?: GetDebounce\n  stateReducer?: StateReducer\n  scrollToIndex?: ScrollToIndex\n  filterFn?: SelectFilter\n}\nexport interface UseSelectReturn {\n  value: any\n  multi: boolean\n  searchValue: string\n  isOpen: boolean\n  highlightedIndex: number\n  selectedOption: Option\n  visibleOptions: Option[]\n  selectIndex: (index: number) => any\n  highlightIndex: (value: any) => any\n  removeValue: SelectRemoveValue\n  setOpen: SelectSetOpen\n  setSearch: SelectSetSearch\n  popper: UsePopperReturn\n  getInputProps: AnyFunc\n  getOptionProps: AnyFunc\n  getOption: GetOption\n  optionsRef: MutableRefObject<any>\n}\n\nconst [SelectProvider, useSelectContext] = createContext<UseSelectReturn>({\n  strict: false,\n  name: 'SelectContext',\n})\n\nexport { SelectProvider, useSelectContext }\n\nexport function useSelect({\n  create = false,\n  single = false,\n  getDebounce = defaultGetDebounce,\n  getOption = defaultGetOption,\n  stateReducer = defaultStateReducer,\n  filterFn = defaultFilterFn,\n  scrollToIndex = defaultScrollToIndex,\n  shiftAmount = 5,\n  duplicates,\n  options,\n  value,\n  onChange,\n  placement = 'bottom-start',\n}: UseSelectProps): UseSelectReturn {\n  const [\n    { searchValue, resolvedSearchValue, isOpen, highlightedIndex },\n    setState,\n  ] = useHoistedState(initialState, stateReducer)\n\n  const multi = !single\n\n  // Refs\n\n  const optionsRef = useRef()\n  const inputRef = useRef()\n  const onBlurRef = useRef({})\n  const onChangeRef = useRef()\n  const filterFnRef = useRef()\n  const scrollToIndexRef = useRef()\n\n  const popper = usePopper({\n    placement,\n  })\n\n  ;(filterFnRef.current as any) = filterFn\n  ;(scrollToIndexRef.current as any) = scrollToIndex\n  ;(onChangeRef.current as any) = onChange\n\n  // Multi should always at least have an empty array as the value\n  if (multi && typeof value === 'undefined') {\n    value = defaultMultiValue\n  }\n\n  // If no options are provided, then use an empty array\n  if (!options) {\n    options = defaultOptions\n  }\n\n  const originalOptions = options\n\n  // If multi and duplicates aren't allowed, filter out the\n  // selected options from the options list\n  options = useMemo(() => {\n    if (multi && !duplicates) {\n      return options?.filter(\n        (d) =>\n          !value?.some((v: any) => getOption(v).value === getOption(d).value)\n      )\n    }\n    return options\n  }, [options, value, duplicates, multi, getOption])\n\n  // Compute the currently selected option(s)\n  const selectedOption = useMemo(() => {\n    if (!multi) {\n      return (\n        originalOptions.find(\n          (d) => getOption(d).value === getOption(value).value\n        ) || getOption(value)\n      )\n    } else {\n      return value.map(\n        (val: any) =>\n          originalOptions.find(\n            (d) => getOption(d).value === getOption(val).value\n          ) || getOption(val)\n      )\n    }\n  }, [multi, value, originalOptions, getOption])\n\n  // If there is a search value, filter the options for that value\n  // TODO: This is likely where we will perform async option fetching\n  // in the future.\n  options = useMemo(() => {\n    if (resolvedSearchValue) {\n      return (filterFnRef.current as any)?.(\n        options,\n        resolvedSearchValue,\n        getOption\n      )\n    }\n    return options\n  }, [options, resolvedSearchValue, getOption])\n\n  // If in create mode and we have a search value, fabricate\n  // an option for that searchValue and prepend it to options\n  options = useMemo(() => {\n    if (create && searchValue) {\n      return [{ _new: true, ...getOption(searchValue) }, ...options!]\n    }\n    return options\n  }, [create, searchValue, options])\n\n  // Actions\n\n  const setOpen = useCallback(\n    (newIsOpen) => {\n      setState(\n        (old) => ({\n          ...old,\n          isOpen: newIsOpen,\n        }),\n        SelectActions.SetOpen\n      )\n    },\n    [setState]\n  )\n\n  const setResolvedSearch = useDebounce((value) => {\n    setState(\n      (old) => ({\n        ...old,\n        resolvedSearchValue: value,\n      }),\n      SelectActions.SetSearch\n    )\n  }, getDebounce(options!))\n\n  const setSearch = useCallback(\n    (value) => {\n      setState(\n        (old) => ({\n          ...old,\n          searchValue: value,\n        }),\n        SelectActions.SetSearch\n      )\n      setResolvedSearch(value)\n    },\n    [setState, setResolvedSearch]\n  )\n\n  const highlightIndex = useCallback(\n    (value) => {\n      setState((old) => {\n        return {\n          ...old,\n          highlightedIndex: Math.min(\n            Math.max(\n              0,\n              typeof value === 'function' ? value(old.highlightedIndex) : value\n            ),\n            options!.length - 1\n          ),\n        }\n      }, SelectActions.HighlightIndex)\n    },\n    [options, setState]\n  )\n\n  const selectIndex = useCallback(\n    (index) => {\n      const option = options![index]\n      if (option) {\n        const { _new, ...selectedOption } = getOption(option) as any\n        if (!multi) {\n          ;(onChangeRef.current as any)?.(selectedOption.value, {\n            action: _new ? ChangeActions.Create : ChangeActions.Select,\n            value: selectedOption,\n          })\n        } else {\n          if (\n            duplicates ||\n            !value.some((v: any) => getOption(v).value === selectedOption.value)\n          ) {\n            ;(onChangeRef.current as any)?.([...value, selectedOption.value], {\n              action: _new ? ChangeActions.Create : ChangeActions.Select,\n              value: selectedOption,\n            })\n          }\n        }\n      }\n\n      if (!multi) {\n        setOpen(false)\n      } else {\n        setSearch('')\n      }\n    },\n    [multi, options, duplicates, value, setOpen, setSearch]\n  )\n\n  const removeValue = useCallback(\n    (index) => {\n      ;(onChangeRef.current as any)(\n        value.filter((_: string, i: number) => i !== index),\n        { action: ChangeActions.Remove, value: getOption(value[index]) }\n      )\n    },\n    [value]\n  )\n\n  // Handlers\n\n  const handleSearchValueChange = (e: any) => {\n    setSearch(e.target.value)\n    setOpen(true)\n  }\n\n  const handleSearchClick = () => {\n    if (!create || multi) {\n      setSearch('')\n    }\n    setOpen(true)\n  }\n\n  const handleSearchFocus = () => handleSearchClick()\n\n  // Prop Getters\n\n  const ArrowUp =\n    (defaultShift?: any, defaultMeta?: any) =>\n    ({ shift, meta }: any, e: any) => {\n      e.preventDefault()\n      const amount =\n        defaultMeta || meta\n          ? 1000000000000\n          : defaultShift || shift\n          ? shiftAmount - 1\n          : 1\n      setOpen(true)\n      highlightIndex((old: number) => old - amount)\n    }\n\n  const ArrowDown =\n    (defaultShift?: any, defaultMeta?: any) =>\n    ({ shift, meta }: any, e: any) => {\n      e.preventDefault()\n      const amount =\n        defaultMeta || meta\n          ? 1000000000000\n          : defaultShift || shift\n          ? shiftAmount - 1\n          : 1\n      setOpen(true)\n      highlightIndex((old: number) => old + amount)\n    }\n\n  const Enter = (_: any, e: any) => {\n    if (isOpen) {\n      if (searchValue || options![highlightedIndex]) {\n        e.preventDefault()\n      }\n      if (options![highlightedIndex]) {\n        selectIndex(highlightedIndex)\n      }\n    }\n  }\n\n  const Escape = () => {\n    setOpen(false)\n  }\n\n  const Tab = () => {\n    setOpen(false)\n  }\n\n  const Backspace = () => {\n    if (!multi || searchValue) {\n      return\n    }\n    removeValue(value.length - 1)\n  }\n\n  const getKeyProps = useKeys({\n    ArrowUp: ArrowUp(),\n    ArrowDown: ArrowDown(),\n    PageUp: ArrowUp(true),\n    PageDown: ArrowDown(true),\n    Home: ArrowUp(false, true),\n    End: ArrowDown(false, true),\n    Enter,\n    Escape,\n    Tab,\n    Backspace,\n  } as any)\n\n  const getInputProps = (\n    {\n      refKey = 'ref',\n      ref,\n      onChange,\n      onFocus,\n      onClick,\n      onBlur,\n      ...rest\n    } = {} as any\n  ) => {\n    return getKeyProps({\n      [refKey]: (el: HTMLElement) => {\n        ;(inputRef.current as any) = el\n        if (ref) {\n          ref.current = el\n        }\n      },\n      value:\n        (isOpen ? searchValue : selectedOption ? selectedOption.label : '') ||\n        '',\n      onChange: (e: any) => {\n        handleSearchValueChange(e)\n        if (onChange) {\n          onChange(e)\n        }\n      },\n      onFocus: (e: any) => {\n        handleSearchFocus()\n        if (onFocus) {\n          onFocus(e)\n        }\n      },\n      onClick: (e: any) => {\n        handleSearchClick()\n        if (onClick) {\n          onClick(e)\n        }\n      },\n      onBlur: (e: any) => {\n        if (onBlur) {\n          e.persist()\n          ;(onBlurRef.current as any).cb = onBlur\n          ;(onBlurRef.current as any).event = e\n        }\n      },\n      ...rest,\n    })\n  }\n\n  const getOptionProps = (\n    { index, key = index, onClick, onMouseEnter, ...rest } = {} as any\n  ) => {\n    if (typeof index !== 'number' || index < 0) {\n      throw new Error(\n        `useSelect: The getOptionProps prop getter requires an index property, eg. 'getOptionProps({index: 1})'`\n      )\n    }\n\n    return {\n      key,\n      ...rest,\n      onClick: (e: any) => {\n        selectIndex(index)\n        if (onClick) {\n          onClick(e)\n        }\n      },\n      onMouseEnter: (e: any) => {\n        highlightIndex(index)\n        if (onMouseEnter) {\n          onMouseEnter(e)\n        }\n      },\n    }\n  }\n\n  // Effects\n\n  // When the user clicks outside of the options box\n  // while open, we need to close the dropdown\n  useClickOutsideRef(\n    isOpen,\n    () => {\n      setOpen(false)\n    },\n    optionsRef!\n  )\n\n  // When searching, activate the first option\n  useEffect(() => {\n    highlightIndex(0)\n  }, [searchValue, highlightIndex])\n\n  // When we open and close the options, set the highlightedIndex to 0\n  useEffect(() => {\n    highlightIndex(0)\n\n    if (!isOpen && (onBlurRef.current as any)?.event) {\n      ;(onBlurRef.current as any)?.cb((onBlurRef.current as any).event)\n      ;(onBlurRef.current as any).event = null\n    }\n  }, [isOpen, highlightIndex])\n\n  // When the highlightedIndex changes, scroll to that item\n  useEffect(() => {\n    ;(scrollToIndexRef.current as any)?.(highlightedIndex)\n  }, [highlightedIndex])\n\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      setTimeout(() => {\n        ;(inputRef.current as any)?.focus()\n      })\n    }\n  }, [isOpen])\n\n  return {\n    multi,\n    optionsRef,\n    popper,\n    // State\n    value,\n    searchValue,\n    isOpen,\n    highlightedIndex,\n    selectedOption,\n    visibleOptions: options!,\n    // Actions\n    selectIndex,\n    removeValue,\n    setOpen,\n    setSearch,\n    highlightIndex,\n    // Prop Getters\n    getInputProps,\n    getOptionProps,\n    getOption,\n  }\n}\n\nfunction useClickOutsideRef(\n  enable: boolean,\n  fn: AnyFunc,\n  userRef: MutableRefObject<any>\n) {\n  const localRef = useRef()\n  const fnRef = useRef()\n\n  ;(fnRef.current as any) = fn\n  const elRef =\n    userRef || (localRef as unknown as MutableRefObject<HTMLElement>)\n\n  const handle = useCallback(\n    (e) => {\n      const isTouch = e.type === 'touchstart'\n      if (e.type === 'click' && isTouch) {\n        return\n      }\n      const el = elRef.current as HTMLElement\n      if (el && !el.contains(e.target)) {\n        ;(fnRef.current as any)(e)\n      }\n    },\n    [elRef]\n  )\n\n  useEffect(() => {\n    if (enable) {\n      document.addEventListener('touchstart', handle, true)\n      document.addEventListener('click', handle, true)\n    }\n\n    return () => {\n      document.removeEventListener('touchstart', handle, true)\n      document.removeEventListener('click', handle, true)\n    }\n  }, [enable, handle])\n}\n\nexport function useSelectCombobox(props: any = {}) {\n  const styles = useStyles()\n  return {\n    ...props,\n    __css: styles.combobox,\n  }\n}\n\nexport function useSelectInput(props: any = {}) {\n  const { getInputProps } = useSelectContext()\n  const styles = useStyles()\n\n  return {\n    ...props,\n    ...getInputProps(),\n    __css: styles.input,\n  }\n}\nexport function useSelectLabel(props: any = {}) {\n  const styles = useStyles()\n\n  return {\n    ...props,\n    __css: styles.label,\n  }\n}\n\nexport function useSelectButton(props: any = {}) {\n  const { isOpen, setOpen } = useSelectContext()\n  const onClick = useCallback(() => setOpen(!isOpen), [setOpen, isOpen])\n  const styles = useStyles()\n\n  return {\n    ...props,\n    __css: styles.button,\n    onClick,\n  }\n}\n\nexport function useSelectedItem(props: any = {}) {\n  const { removeValue } = useSelectContext()\n  const styles = useStyles()\n\n  const onClick = useCallback(\n    () => removeValue(props.index),\n    [props.index, removeValue]\n  )\n\n  return {\n    key: props.value,\n    onClick,\n    __css: styles.selectedItem,\n    ...props,\n  }\n}\n\nexport function useSelectItem(props: any = {}) {\n  const { getOptionProps, highlightedIndex } = useSelectContext()\n  const styles = useStyles()\n  const highlighted = highlightedIndex === props.index\n\n  return {\n    ...props,\n    ...useMemo(\n      () => ({\n        ...getOptionProps!({\n          option: { value: props.value },\n          index: props.index,\n        }),\n        __css: {\n          ...styles.item,\n          ...(highlighted && (styles.item as any))?._active,\n        },\n      }),\n      [getOptionProps, props.value, props.index, styles.item]\n    ),\n  }\n}\n\nexport function useSelectList(props: any = {}) {\n  const { isOpen, getOption, optionsRef, popper, visibleOptions } =\n    useSelectContext()\n  const styles = useStyles()\n\n  return {\n    ...props,\n    ref: mergeRefs(optionsRef, popper.popperRef),\n    isOpen,\n    visibleOptions,\n    getOption,\n    __css: styles.list,\n  }\n}\n\nexport function useSelectedList(props: any = {}) {\n  const { value: selectedItems, multi } = useSelectContext()\n  const styles = useStyles()\n\n  return {\n    ...props,\n    multi,\n    selectedItems,\n    __css: styles.selectedList,\n  }\n}\n\nexport function useSelectControl(props: any = {}) {\n  const { isOpen, popper } = useSelectContext()\n  const styles = useStyles()\n\n  return {\n    ...props,\n    ...useMemo(\n      () => ({\n        ref: mergeRefs(props.ref, popper.referenceRef),\n      }),\n      [props.ref, popper.referenceRef]\n    ),\n    isOpen,\n    __css: styles.control,\n  }\n}\n","import * as React from \"react\";\n\n/**\n * Creates a named context, provider, and hook.\n *\n * @param options create context options\n */\nexport function createContext(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var {\n    strict = true,\n    errorMessage = \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\",\n    name\n  } = options;\n  var Context = /*#__PURE__*/React.createContext(undefined);\n  Context.displayName = name;\n\n  function useContext() {\n    var context = React.useContext(Context);\n\n    if (!context && strict) {\n      var error = new Error(errorMessage);\n      error.name = \"ContextError\";\n      Error.captureStackTrace == null ? void 0 : Error.captureStackTrace(error, useContext);\n      throw error;\n    }\n\n    return context;\n  }\n\n  return [Context.Provider, useContext, Context];\n}\n//# sourceMappingURL=context.js.map","import {\n  HTMLChakraProps,\n  MenuOptionGroup,\n  MenuProps,\n  Input,\n  MenuListProps,\n  MenuOptionGroupProps,\n  Box,\n  IconButton,\n  chakra,\n  HStack,\n  omitThemingProps,\n  useMultiStyleConfig,\n  StylesProvider,\n  forwardRef,\n  Tag,\n  TagLabel,\n  TagCloseButton,\n  TagProps,\n} from '@chakra-ui/react'\nimport { memo, ReactNode, useCallback, useMemo } from 'react'\nimport { PropsOf } from '@emotion/react'\nimport {\n  SelectProvider,\n  useSelect,\n  useSelectButton,\n  useSelectCombobox,\n  useSelectControl,\n  useSelectInput,\n  useSelectedItem,\n  useSelectItem,\n  useSelectLabel,\n  useSelectList,\n  useSelectedList,\n  UseSelectProps,\n} from './use-select'\n\n// @see https://github.com/chakra-ui/chakra-ui/issues/140\n\nexport interface SelectItem {\n  value: any\n  label?: string\n}\n\nexport interface SelectProps\n  extends Omit<\n      HTMLChakraProps<'select'>,\n      'value' | 'size' | 'onChange' | 'onSelect' | 'children'\n    >,\n    Omit<MenuProps, 'children'>,\n    UseSelectProps {\n  label?: string\n  children?: ReactNode\n}\n\nexport interface SelectControlProps\n  extends Omit<HTMLChakraProps<'select'>, 'size'>,\n    Omit<MenuProps, 'children'> {\n  defaultIsOpen?: boolean\n  isLazy?: true\n  closeOnSelect?: false\n  children?: ReactNode\n}\n\nexport type SelectListProps = MenuListProps\nexport type SelectOptionGroupProps = MenuOptionGroupProps\nexport interface SelectOptionItemProps extends HTMLChakraProps<'li'> {\n  highlighted?: boolean\n  index: number\n}\n\nexport interface SelectedItemProps extends TagProps, SelectItem {\n  index: number\n}\n\nexport interface MultiSelectProps extends Omit<SelectProps, 'children'> {\n  children?: ReactNode\n}\n\nexport const Select: React.FC<SelectProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig('MultiSelect', props)\n  const ownProps = omitThemingProps(props)\n\n  const ctx = useSelect(ownProps as any)\n  const context = useMemo(() => ctx, [ctx])\n\n  return (\n    <SelectProvider value={context}>\n      <StylesProvider value={styles}>\n        <chakra.div pos='relative'>{children}</chakra.div>\n      </StylesProvider>\n    </SelectProvider>\n  )\n}\n\nexport const SelectLabel = memo<HTMLChakraProps<'label'>>((props) => {\n  const labelProps = useSelectLabel()\n\n  return <chakra.label {...props} {...labelProps} />\n})\nSelectLabel.displayName = 'SelectLabel'\n\nexport const SelectOptionItem = memo<SelectOptionItemProps>(\n  ({ value, index, ...props }) => {\n    const { selectedItemRef, ...itemProps } = useSelectItem({ value, index })\n\n    return (\n      <chakra.li\n        ref={selectedItemRef && selectedItemRef}\n        {...props}\n        {...itemProps}\n      >\n        {value}\n      </chakra.li>\n    )\n  }\n)\n\nexport const SelectList = memo(() => {\n  const {\n    __css,\n    visibleOptions,\n    isOpen,\n    getOption,\n    ref: listRef,\n    ...listProps\n  } = useSelectList({})\n\n  const dropdownVisible = !!(isOpen && visibleOptions.length)\n  const optionItemProps = useCallback(\n    (option, index) => {\n      const optionItem = getOption(option)\n      return {\n        key: optionItem.id || `${optionItem.value}${index}`,\n        value: optionItem.value,\n        index,\n      }\n    },\n    [getOption]\n  )\n\n  return (\n    <chakra.ul\n      ref={listRef}\n      __css={{\n        listStyle: 'none',\n        position: 'absolute',\n        ...(!dropdownVisible && { display: 'none' }),\n        ...__css,\n      }}\n      {...listProps}\n    >\n      {dropdownVisible &&\n        visibleOptions.map((item: any, index: number) => {\n          const { key: itemKey, ...restItemProps } = optionItemProps(\n            item,\n            index\n          )\n          return <SelectOptionItem key={itemKey} {...restItemProps} />\n        })}\n    </chakra.ul>\n  )\n})\n\nexport const SelectOptionGroup: React.FC<SelectOptionGroupProps> = (props) => {\n  return <MenuOptionGroup {...props} />\n}\n\nconst SelectToggleIcon: React.FC<PropsOf<'svg'>> = (props) => (\n  <svg viewBox='0 0 24 24' width='1.25rem' height='1.25rem' {...props}>\n    <path\n      fill='currentColor'\n      d='M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z'\n    />\n  </svg>\n)\n\nexport const SelectInput = memo((props) => {\n  const inputProps = useSelectInput(props)\n\n  return <chakra.input {...inputProps} />\n})\nSelectInput.displayName = 'SelectInput'\n\nexport const SelectedItem: React.FC<SelectedItemProps> = ({\n  value,\n  index,\n  ...props\n}) => {\n  const { onClick, __css, ...itemProps } = useSelectedItem({\n    value,\n    index,\n    ...props,\n  })\n\n  return (\n    <Tag {...__css} {...itemProps}>\n      <TagLabel>{value}</TagLabel>\n      <TagCloseButton onClick={onClick} />\n    </Tag>\n  )\n}\n\nexport const SelectToggleButton = memo((props) => {\n  const {\n    __css,\n    size = 'sm',\n    ariaLabel = 'toggle menu',\n    Icon = SelectToggleIcon,\n    ...buttonProps\n  } = useSelectButton(props)\n\n  return (\n    <IconButton\n      size={size}\n      aria-label={ariaLabel}\n      icon={<Icon />}\n      {...__css}\n      {...buttonProps}\n    />\n  )\n})\nSelectToggleButton.displayName = 'SelectToggleButton'\n\nexport const SelectedList = memo(({ children, ...props }) => {\n  const { __css, selectedItems, multi, ...selectedListProps } =\n    useSelectedList(props)\n\n  return (\n    <Box {...__css} {...selectedListProps}>\n      {multi &&\n        selectedItems?.map((selectedItem: any, index: number) => (\n          <SelectedItem\n            key={`selected-item-${index}`}\n            value={selectedItem}\n            index={index}\n          />\n        ))}\n      {children}\n    </Box>\n  )\n})\nSelectedList.displayName = 'SelectedList'\n\nexport const SelectCombobox = memo((props) => {\n  const { __css, ...comboboxProps } = useSelectCombobox(props)\n\n  return (\n    <HStack {...__css} {...comboboxProps}>\n      <SelectToggleButton />\n    </HStack>\n  )\n})\nSelectCombobox.displayName = 'SelectCombobox'\n\nexport const SelectControl = forwardRef<SelectControlProps, 'div'>(\n  ({ children }, ref) => {\n    const { ref: controlRef, __css } = useSelectControl({ ref })\n\n    return (\n      <Input ref={controlRef} as={HStack} {...__css}>\n        {children}\n      </Input>\n    )\n  }\n)\n\nexport const MultiSelect: React.FC<MultiSelectProps> = ({\n  label,\n  ...props\n}) => {\n  return (\n    <Select {...props}>\n      {label && <SelectLabel>{label}</SelectLabel>}\n      <SelectControl>\n        <SelectedList>\n          <SelectInput />\n        </SelectedList>\n        <SelectCombobox />\n      </SelectControl>\n      <SelectList />\n    </Select>\n  )\n}\n","import {\n  ChakraProvider,\n  ColorModeScript,\n  useColorMode,\n  useColorModeValue,\n  extendTheme,\n  Button,\n  Flex,\n  VStack,\n} from '@chakra-ui/react'\nimport {\n  MultiSelect,\n  MultiSelectProps,\n  MultiSelectTheme,\n} from 'chakra-multiselect'\nimport { FC, useCallback, useState } from 'react'\n\nconst theme = extendTheme({\n  components: {\n    MultiSelect: MultiSelectTheme,\n  },\n})\n\nconst ColorModeToggleBar = () => {\n  const { toggleColorMode } = useColorMode()\n  const nextMode = useColorModeValue('dark', 'light')\n\n  return (\n    <Flex justify='flex-end' mb={4}>\n      <Button\n        size='md'\n        variant='ghost'\n        color='current'\n        marginLeft='2'\n        onClick={toggleColorMode}\n      >{`Switch to ${nextMode} mode`}</Button>\n    </Flex>\n  )\n}\n\nconst items = [\n  'Neptunium',\n  'Plutonium',\n  'Americium',\n  'Curium',\n  'Berkelium',\n  'Californium',\n  'Einsteinium',\n  'Fermium',\n  'Mendelevium',\n  'Nobelium',\n  'Lawrencium',\n  'Rutherfordium',\n  'Dubnium',\n  'Seaborgium',\n  'Bohrium',\n  'Hassium',\n  'Meitnerium',\n  'Darmstadtium',\n  'Roentgenium',\n  'Copernicium',\n  'Nihonium',\n  'Flerovium',\n  'Moscovium',\n  'Livermorium',\n  'Tennessine',\n  'Oganesson',\n]\n\nconst options = items.map((label) => ({ label, value: label.toLowerCase() }))\n\nconst StatefulMultiSelect: FC<\n  Omit<MultiSelectProps, 'onChange' | 'value'> &\n    Partial<Pick<MultiSelectProps, 'onChange' | 'value'>>\n> = ({ onChange: _onChange, value: _value, ...props }) => {\n  const [value, setValue] = useState(_value || props.single ? '' : [])\n  const onChange = useCallback(\n    (next: any) => {\n      setValue(next)\n      _onChange?.(next)\n    },\n    [setValue, _onChange]\n  )\n\n  return <MultiSelect value={value} onChange={onChange} {...props} />\n}\n\nconst App = () => {\n  return (\n    <>\n      <ColorModeScript initialColorMode='light' />\n      <ChakraProvider theme={theme}>\n        <VStack minH='100vh' w='full'>\n          <ColorModeToggleBar />\n          <VStack\n            spacing='12'\n            w='full'\n            flex='1'\n            justifyContent='center'\n            alignItems='center'\n          >\n            <StatefulMultiSelect\n              options={options}\n              label='Choose a single item'\n              single\n            />\n            <StatefulMultiSelect\n              options={options}\n              label='Choose multiple items'\n            />\n            <StatefulMultiSelect\n              options={options}\n              label='Choose or create a single item'\n              single\n              create\n            />\n            <StatefulMultiSelect\n              options={options}\n              label='Choose or create multiple items'\n              create\n            />\n          </VStack>\n        </VStack>\n      </ChakraProvider>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}