{"version":3,"sources":["../../node_modules/@chakra-ui/utils/dist/esm/react-helpers.js","../../node_modules/@chakra-ui/utils/dist/esm/assertion.js","../../node_modules/@chakra-ui/theme-tools/dist/esm/component.js","../../src/theme.ts","../../src/use-select.ts","../../src/MultiSelect.tsx","App.tsx","index.tsx"],"names":["assignRef","ref","value","isFunction","current","error","Error","mergeRefs","_len","arguments","length","refs","Array","_key","forEach","mode","light","dark","props","colorMode","baseStyleList","bg","boxShadow","color","w","py","zIndex","borderRadius","borderWidth","maxH","overflowY","baseStyleSelectedList","d","flexWrap","alignItems","baseStyleLabel","fontSize","marginEnd","mb","fontWeight","transition","opacity","_disabled","baseStyleItem","cursor","_focus","_active","_expanded","baseStyleSelectedItem","variant","colorscheme","baseStyleButton","_hover","SelectActions","baseStyleControl","h","baseStyleCombobox","baseStyleGroupTitle","baseStyleDivider","border","borderColor","my","defaultProps","size","parts","sizes","sm","control","minH","px","spacing","input","m","combobox","item","selectedItem","selectedList","groupTitle","mx","md","lg","baseStyle","list","button","bgColor","appearance","flex","outline","divider","label","defaultMultiValue","defaultOptions","initialState","searchValue","resolvedSearchValue","isOpen","highlightedIndex","defaultStateReducer","_","newState","defaultGetCreateLabel","defaultScrollToIndex","defaultGetDebounce","options","defaultFilterFn","option","a","strict","errorMessage","name","Context","undefined","displayName","Provider","context","createContext","useSelect","getCreateLabel","getDebounce","stateReducer","filterFn","scrollToIndex","shiftAmount","placement","reducerRef","useRef","useState","state","useCallback","_setState","old","updater","useHoistedState","optionsRef","inputRef","onBlurRef","onChangeRef","filterFnRef","getCreateLabelRef","scrollToIndexRef","popper","usePopper","multi","originalOptions","useMemo","duplicates","selectedOption","val","create","userKeys","setOpen","newIsOpen","setState","setResolvedSearch","fn","time","fnRef","useEffect","clearTimeout","Promise","setTimeout","resolve","err","reject","useDebounce","setSearch","highlightIndex","Math","selectIndex","index","removeValue","i","handleSearchValueChange","e","handleSearchClick","handleSearchFocus","ArrowUp","defaultShift","meta","amount","defaultMeta","ArrowDown","getKeyProps","PageUp","PageDown","Home","End","Enter","Escape","Tab","Backspace","onKeyDown","rest","shiftKey","metaKey","handler","keyCode","key","shift","localRef","elRef","userRef","handle","isTouch","el","document","enable","useClickOutsideRef","visibleOptions","getInputProps","refKey","onBlur","onChange","onFocus","onClick","getOptionProps","onMouseEnter","Select","children","styles","useMultiStyleConfig","ctx","omitThemingProps","_jsx","SelectProvider","StylesProvider","chakra","div","pos","SelectLabel","memo","labelProps","useStyles","__css","useSelectLabel","SelectOptionItem","itemProps","useSelectContext","highlighted","useSelectItem","li","SelectList","useSelectList","listRef","ul","listStyle","position","display","listProps","SelectToggleIcon","viewBox","width","height","fill","SelectInput","inputProps","useSelectInput","SelectedItem","useSelectedItem","_jsxs","Tag","TagLabel","TagCloseButton","SelectToggleButton","useSelectButton","ariaLabel","Icon","IconButton","icon","buttonProps","SelectedList","selectedItems","useSelectedList","Box","selectedListProps","SelectCombobox","useSelectCombobox","HStack","comboboxProps","SelectControl","forwardRef","useSelectControl","Input","controlRef","as","MultiSelect","theme","extendTheme","components","MultiSelectTheme","ColorModeToggleBar","toggleColorMode","useColorMode","nextMode","useColorModeValue","justify","marginLeft","map","toLowerCase","App","setValue","initialColorMode","justifyContent","next","ReactDOM","render","getElementById"],"mappings":"8ZAkDO,SAASA,EAAUC,EAAKC,GAC7B,GAAW,MAAPD,EAEJ,GCvCK,SAAoBC,GACzB,MAAwB,oBAAVA,EDsCVC,CAAWF,GACbA,EAAIC,QAIN,IAEED,EAAIG,QAAUF,EACd,MAAOG,GACP,MAAM,IAAIC,MAAM,wBAA0BJ,EAAQ,aAAeD,EAAM,MAWpE,SAASM,IACd,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAGzB,OAAO,SAAAX,GACLS,EAAKG,SAAQ,SAAAb,GAAG,OAAID,EAAUC,EAAKC,OE7EhC,SAASa,EAAKC,EAAOC,GAC1B,OAAO,SAAAC,GAAK,MAAwB,SAApBA,EAAMC,UAAuBF,EAAOD,GCatD,SAASI,EAAcF,GACrB,MAAO,CACLG,GAAIN,EAAKA,OAALA,YADC,GAELO,UAAWP,EAAKA,KAALA,WAFN,GAGLQ,MAHK,UAILC,EAJK,OAKLC,GALK,IAMLC,OANK,EAOLC,aAPK,KAQLC,YARK,MASLC,KATK,KAULC,UAAW,QAIf,IAAMC,EAAwB,CAC5BC,EAD4B,OAE5BC,SAF4B,OAG5BC,WAAY,UAGRC,EAAiB,CACrBC,SADqB,KAErBC,UAFqB,EAGrBC,GAHqB,EAIrBC,WAJqB,SAKrBC,WALqB,WAMrBC,QANqB,EAOrBC,UAAW,CACTD,QAAS,KAIb,SAASE,EAAczB,GACrB,MAAO,CACL0B,OADK,UAELJ,WAFK,2BAGLK,OAAQ,CACNxB,GAAIN,EAAKA,WAALA,sBAEN+B,QAAS,CACPzB,GAAIN,EAAKA,WAALA,sBAENgC,UAAW,CACT1B,GAAIN,EAAKA,WAALA,sBAEN2B,UAAW,CACTD,QADS,GAETG,OAAQ,gBAKd,SAASI,EAAsB9B,GAC7B,MAAO,CACLS,aADK,OAELsB,QAFK,QAGLC,YAAahC,EAAMgC,aAIvB,SAASC,EAAgBjC,GACvB,MAAO,CACL+B,QADK,QAELG,OAAQ,CACN/B,GAAI,eAENwB,OAAQ,CACNxB,GAAI,eAENyB,QAAS,CACPzB,GAAI,eAEN6B,YAAahC,EAAMgC,aAIvB,IC9BYG,ED8BNC,EAAmB,CACvBC,EAAG,QAUCC,EAAoB,CACxBxB,EADwB,OAExBE,WAAY,UAGRuB,EAAsB,CAC1BlB,WAAY,YAGRmB,EAAmB,CACvB1B,EADuB,SAEvBuB,EAFuB,OAGvBI,OAHuB,EAIvBC,YAJuB,UAKvBC,GALuB,EAMvBpB,QAAS,IAwGX,EAAe,CACbqB,aAAc,CACZC,KAAM,MAERC,MAjOY,CAAC,OAAD,kGAAd,SAkOEC,MA5FmB,CACnBC,GAAI,CACFC,QAAS,CACPC,KADO,EAEPC,GAFO,EAGPC,QAAS,GAEXC,MAAO,CACLC,EAAG,MAELC,SAAU,CACRH,QAAS,KAEXI,KAAM,CACJjD,GADI,EAEJ4C,GAAI,GAENM,aAAc,CACZH,EAAG,MAELI,aAAc,CACZnD,GAAI,MAENoD,WAAY,CACVC,GADU,EAEVjB,GAFU,EAGVzB,SAAU,OAGd2C,GAAI,CACFZ,QAAS,CACPC,KADO,GAEPC,GAFO,EAGPC,QAAS,GAEXC,MAAO,CACLC,EAAG,OAELC,SAAU,CACRH,QAAS,KAEXI,KAAM,CACJjD,GADI,EAEJ4C,GAAI,GAENM,aAAc,CACZH,EAAG,OAELI,aAAc,CACZnD,GAAI,OAENoD,WAAY,CACVC,GADU,EAEVjB,GAFU,EAGVzB,SAAU,OAGd4C,GAAI,CACFb,QAAS,CACPC,KADO,GAEPC,GAFO,EAGPC,QAAS,GAEXC,MAAO,CACLC,EAAG,GAELC,SAAU,CACRH,QAAS,KAEXI,KAAM,CACJjD,GADI,EAEJ4C,GAAI,GAENM,aAAc,CACZH,EAAG,GAELI,aAAc,CACZnD,GAAI,GAENoD,WAAY,CACVC,GADU,EAEVjB,GAFU,EAGVzB,SAAU,QAWd6C,UA3GiB/D,YAAD,MAAiC,CACjDgE,KAAM9D,EAD2C,GAEjDwD,aAFiD,EAGjDF,KAAM/B,EAH2C,GAIjDgC,aAAc3B,EAJmC,GAKjDmC,OAAQhC,EALyC,GAMjDsB,SANiD,EAOjDN,QAPiD,EAQjDI,MAjCuD,CACvDa,QADuD,cAEvDC,WAFuD,OAGvDC,KAHuD,EAIvDC,QAAS,GA8BTV,WATiD,EAUjDW,QAViD,EAWjDC,MAAOtD,K,sVCtET,SAAYkB,GACVA,oBACAA,wBACAA,kCAHF,CAAYA,MAAZ,KAiBA,IAAMqC,EAAN,GACMC,EAAN,GAEMC,EAA4B,CAChCC,YADgC,GAEhCC,oBAFgC,GAGhCC,QAHgC,EAIhCC,iBAAkB,GAGdC,EAAoC,SAACC,EAAGC,GAAJ,OAA1C,GACMC,EAAyCpE,YAAD,wBAA9C,EAA8C,MACxCqE,EAAsC,aACtCC,EAAmCC,YAAD,OACtCA,iBAAgCA,iBADlC,GAGMC,GAAgC,SAACD,EAASV,GAC9C,OAAOU,EAAA,QACIE,YAAD,OACNA,0CAGYZ,aALT,wBAOEa,YACL,OAAOA,yCAGIb,aAHX,mBAgEN,I,GJjKO,SAAuBU,QACZ,IAAZA,IACFA,EAAU,IAFyB,MASjCA,EATiC,IAMnCI,cANmC,aAOnCC,oBAPmC,MAOpB,6FAPoB,EAQnCC,EARmC,EAQnCA,KAEEC,EAAuB,qBAAoBC,GAa/C,OAZAD,EAAQE,YAAcH,EAYf,CAACC,EAAQG,SAVhB,WACE,IAAIC,EAAU,aAAiBJ,GAE/B,IAAKI,GAAWP,EACd,MAAM,IAAIrG,MAAMsG,GAGlB,OAAOM,GAG6BJ,GIyMGK,CAA+B,CACxER,QADwE,EAExEE,KAAM,kB,qBAFF,G,MAAA,G,eAOUO,G,GAAU,6BAGxBC,sBAHwB,cAIxBC,mBAJwB,cAKxBC,oBALwB,cAMxBC,gBANwB,eAOxBC,qBAPwB,cAQxBC,mBARwB,gEAaxBC,iBAbwB,MAaZ,eAbY,IA/F1B,SAAyB,EAAzB,GAIE,IAAMC,EAAaC,mBACjBD,YALJ,MAM6BE,mBAA3B,GANF,mBAMQ,EANR,KAMQ,EANR,KAsBE,MAAO,CAACC,EAfSC,uBACf,cACE,MACE,MAAM,IAAI1H,MAAV,kDAEF,OAAO2H,GAAWC,YAAD,OACbN,YAEAO,EAFAP,GADJ,QAQF,CAbF,KA0GIQ,CAAgB,EAHpB,GAfwB,0BAgBtB,EAhBsB,EAgBtB,cAhBsB,EAgBtB,sBAhBsB,EAgBtB,OAA4CpC,EAhBtB,EAgBsBA,iBADxC,EAfkB,KAsBlBqC,EAAaR,mBACbS,EAAWT,mBACXU,EAAYV,iBAAlB,IACMW,EAAcX,mBACdY,EAAcZ,mBACda,EAAoBb,mBACpBc,EAAmBd,mBAEnBe,EAASC,YAAU,CACvBlB,cAGAc,YACAE,YACAD,YACAF,YAGEM,GAAJ,qBAAoB5I,IAClBA,KAIF,IACEqG,KAGF,IAAMwC,GAAN,EAIAxC,EAAUyC,mBAAQ,WACU,MAA1B,OAAIF,IAAJ,EACE,mBAAOvC,UAAiBvE,YAAD,OAAQ9B,WAAe8B,EAA9C,UAEF,IACC,CAACuE,EAASrG,EAAO+I,EALpB1C,IAQA,IAAM2C,GAAiBF,mBAAQ,WAC7B,SAQS9I,EAAA,KACJiJ,YAAD,OACEJ,SAAsB/G,YAAD,OAAOA,UAA5B+G,MAAgD,CAC9CtD,MAD8C,EAE9CvF,MAAOiJ,MAVXJ,SAAsB/G,YAAD,OAAOA,UAA5B+G,MAAkD,CAChDtD,MADgD,EAEhDvF,MAAOA,KAYZ,CAAC4I,EAAO5I,EAjBX,KAsBAqG,EAAUyC,mBAAQ,WAChB,SACE,MAAQP,EAAR,eAAQA,YAAR,GAEF,IACC,CAAClC,EALJA,IASAA,EAAUyC,mBAAQ,WAChB,OAAII,GAAJ,EACE,CACE,CACE3D,MAAK,MAAGiD,EAAH,eAAGA,UADV,GAEExI,MAAO2F,IAHX,uBAQF,IACC,CAACuD,EAAQvD,EAXZU,IAeA,IAhLA8C,GAgLMC,GAAUtB,uBACbuB,YACCC,GACGtB,YAAD,eAEEnC,OAAQwD,MAEVlG,EALFmG,WAQF,CAVF,IAaMC,GAvPR,SAAqBC,GAArB,IAAkCC,EAAlC,yDACQ1J,EAAM4H,iBAAZ,MACM+B,EAAQ/B,mBAUd,OARA+B,YAEAC,qBAAU,WACR,OAAO,WACLC,aAAc7J,EAAd6J,YAED,CAJHD,IAMO7B,sBAAW,sBAChB,4CAAAtB,EAAA,iHACMzG,EAAJ,SACE6J,aAAc7J,EAAd6J,SAFJ,kBAIS,IAAIC,SAAQ,cACjB9J,UAAc+J,YAAW,WACvB/J,eACA,IACEgK,EAAUL,kBAAVK,IACA,MAAOC,GACPC,QALJlK,OALJ,2CAeA,CAhBF,IA2O0BmK,EAAalK,YACrCsJ,GACGtB,YAAD,eAEEpC,oBAAqB5F,MAEvBmD,EALFmG,aAOClC,EARH,IAUM+C,GAAYrC,uBACf9H,YACCsJ,GACGtB,YAAD,eAEErC,YAAa3F,MAEfmD,EALFmG,WAOAC,QAEF,CAACD,EAXH,KAcMc,GAAiBtC,uBACpB9H,YACCsJ,GAAUtB,YACR,eAEElC,iBAAkBuE,SAChBA,WAEmB,oBAAVrK,EAAuBA,EAAMgI,EAApC,kBAHcqC,GAKhBhE,SALgBgE,OAQnBlH,EAXHmG,kBAaF,CAACjD,EAfH,IAkBMiE,GAAcxC,uBACjByC,YACC,IAAMhE,EAASF,EAAf,GACA,IACE,GAGM0C,GAAe/I,WAAeuG,EAAlC,QACI+B,iDACA,GADAA,CACW/B,EADX+B,QAEA/B,EAFA+B,OAHFA,2BAA8B/B,EAA9B+B,QAWN,EAGE6B,OAFAf,SAKJ,CAACR,EAAOvC,EAAS0C,EAAY/I,EAAOoJ,GAtBtC,KAyBMoB,GAAc1C,uBACjByC,YACGjC,UACAtI,UAAa,qBAA0ByK,IADvCnC,QAIJ,CANF,IAWMoC,GAA2BC,YAC/BR,GAAUQ,SAAVR,OACAf,QAGIwB,GAAoB,WACnB1B,IAAL,GACEiB,OAEFf,QAGIyB,GAAoB,kBAAMD,MAI1BE,GAAU,SAACC,EAAD,UAA2C,kBACzD,EADyD,EACzD,MAASC,EADgD,EAChDA,KAGTL,mBACA,IAAMM,EACJC,UAEIH,KACAvD,EADAuD,EAHN,EAMA3B,OACAgB,IAAgBpC,YAAD,OAAiBA,EAAhCoC,OAGIe,GAAY,SAACJ,EAAD,UAA2C,kBAC3D,EAD2D,EAC3D,MAASC,EADkD,EAClDA,KAGTL,mBACA,IAAMM,EACJC,UAEIH,KACAvD,EADAuD,EAHN,EAMA3B,OACAgB,IAAgBpC,YAAD,OAAiBA,EAAhCoC,OA6BIgB,IAnVNjC,GAmV4B,CAC1B2B,QAASA,KACTK,UAAWA,KACXE,OAAQP,IAHkB,GAI1BQ,SAAUH,IAJgB,GAK1BI,KAAMT,IAAQ,GALY,GAM1BU,IAAKL,IAAU,GANW,GAO1BM,MAjCY,SAACzF,EAAD,GACZ,KACML,GAAeU,EAAnB,KACEsE,mBAEEtE,EAAJ,IACEiE,QA4BJoB,OAvBa,WACbtC,QAuBAuC,IApBU,WACVvC,QAoBAwC,UAjBgB,WACXhD,IAAL,GAGA4B,GAAYxK,SAAZwK,KA5UK,eAAC,EAAD,0DAAGqB,EAAF,EAAEA,UACR,YADsBC,mBACtB,CAEED,UAAYlB,YAAD,IACH,EAAN,EAAM,UAAN,EAAM,MAAN,EAAsBoB,SAA0Bf,EAAhD,EAAuCgB,QACjCC,EAAU9C,OAAiBA,GAAjC,GACA,GACE8C,EACE,CACEC,UACAC,MACAC,QACApB,QALJiB,GAUF,GACEJ,UA+bR,OAuBF,SAA4B,EAA5B,KAKE,IAAMQ,EAAW1E,mBACX+B,EAAQ/B,mBAEZ+B,YACF,IAAM4C,EACJC,GADF,EAGMC,EAAS1E,uBACZ6C,YACC,IAAM8B,EAAN,eAAgB9B,OAChB,GAAIA,mBAAJ,GAGA,IAAM+B,EAAKJ,EAAX,QACII,IAAOA,WAAY/B,EAAvB,SACIjB,gBAGN,CAXF,IAcAC,qBAAU,WAMR,OALA,IACEgD,6CACAA,yCAGK,WACLA,gDACAA,8CAED,CAACC,EAVJjD,IArFAkD,CAAmB,GAEjB,WACEzD,SAHJyD,GASAlD,qBAAU,WACRS,QACC,CAACzE,EAFJgE,KAKAA,qBAAU,W,MAG0C,GAFlDS,OAEKvE,GAAD,OAAY,EAAAwC,EAAZ,UAAYA,EAAhB,SACI,SAAAA,EAAA,eAA+BA,UAA/B,OACAA,wBAEH,CAACxC,EAPJ8D,KAUAA,qBAAU,WACNlB,gCACD,CAFHkB,IAIAA,qBAAU,WACJ9D,GAAUuC,EAAd,SACE0B,YAAW,W,MACP,SAAA1B,EAAA,yBAGL,CAACvC,EAAQuC,EANZuB,UAQO,CACLf,QADK,EAELT,aACAO,SAEA1I,QACA2F,cACAE,SACAC,mBACAkD,kBACA8D,eAVK,EAYLxC,eACAE,eACApB,WACAe,aACAC,kBAEA2C,cAvIoB,iBACpB,EADoB,4DACpB,EACEC,cAFkB,MACpB,MADoB,EACpB,6CAMEC,EANF,EAMEA,OACGnB,gEAGL,OAAOV,GAAY,GAAD,mBAChB,GAAWsB,YACPtE,YACF,IACErI,gBAJY,uBAQb8F,EAASF,EAAcqD,GAAiBA,GAAH,MAAtC,KARc,8BAUL2B,YACTD,MACA,GACEwC,QAbY,yBAgBNvC,YACRE,KACA,GACEsC,QAnBY,yBAsBNxC,YACRC,KACA,GACEwC,QAzBY,wBA4BPzC,YACP,IACEA,YACEtC,eACAA,sBAhCU,GAAlB,KA6HAgF,eAtFqB,eACrB,EADqB,0DACrB,UADqB,EACrB,EAASlB,WADY,MACrB,EADqB,EACrB,YAA+BmB,EAA/B,EAA+BA,aAAiBxB,gDAEhD,GAAqB,kBAAVvB,GAAsBA,EAAjC,EACE,MAAM,IAAN,MAAM,0GAKR,UACE4B,OADF,GAGEiB,QAAUzC,YACRL,MACA,GACE8C,MAGJE,aAAe3C,YACbP,MACA,GACEkD,U,IClgBGC,GAAiCvM,YAAD,IACnCwM,EAAR,EAAQA,SAEFC,EAASC,YAAoB,cAAnC,GAGMC,EAAMzG,GAFK0G,YAAjB,IAGM5G,EAAU8B,mBAAQ,kBAAD,IAAY,CAAnC,IAEA,OACE+E,cAACC,kBAAe9N,MAAOgH,G,UACrB6G,cAACE,mBAAe/N,MAAOyN,G,UACrBI,cAACG,IAAOC,mBAAIC,IAAI,Y,UAAYV,S,wBAMvBW,GAAcC,gBAAgCpN,YACzD,IAAMqN,E,WDonBoC,IAAbrN,EAAa,0DAEpCyM,EAASa,cAEf,eAGEC,MAAOd,EAAOlI,QC3nBGiJ,GAEnB,OAAOX,cAACG,IAAOzI,uBAAUvE,EAAWqN,cAGzBI,GAAoD,SAAC,GAAD,IAAC,UAEhElE,EAFgE,EAEhEA,MACGvJ,yBAEG0N,E,WDkpBmC,IAAb1N,EAAa,4DACI2N,KAAvC,EADmC,EACnC,eAAkB7I,EADiB,EACjBA,iBAClB2H,EAASa,cACTM,EAAc9I,IAAqB9E,EAAzC,MAEA,cAEK8H,mBACD,6BACKuE,EAAgB,CACjB9G,OAAQ,CAAEvG,MAAOgB,EAAMhB,OACvBuK,MAAOvJ,EAAMuJ,QAHjB,CAKEgE,MAAO,EAAF,GACAd,EADA,cAECmB,GAAgBnB,EAFjB,aAEA,EAFA,aAKP,CAACJ,EAAgBrM,EAAjB,MAA8BA,EAA9B,MAA2CyM,EAb/C,QCvpBkBoB,CAAc,CAAE7O,QAAOuK,UAEzC,OACEsD,cAACG,IAAOc,oBAAO9N,EAAW0N,G,SACvB1O,S,IAKM+O,GAAaX,gBAAK,WAC7B,M,WD+pByC,IAAbpN,EAAa,4DACc2N,KAAjD,EADmC,EACnC,SADmC,EACnC,aADmC,EACnC,OAA8B7B,EADK,EACLA,eAC9BW,EAASa,cAEf,eAEEvO,IAAKM,EAAU8H,EAAYO,EAF7B,WAGE7C,SACAiH,iBACAyB,MAAOd,EAAOzI,OClqBZgK,CANJ,IAAM,EAAN,EAAM,QAAN,EAAM,iBAAN,EAAM,OAICC,EAJP,EAIElP,IAJF,iDAQA,OACE8N,cAACG,IAAOkB,kBACNnP,IAAKkP,EACLV,MAAK,GACHY,UADG,OAEHC,SAAU,aACLvJ,GAAU,CAAEwJ,QAAS,QAHvB,IAMDC,G,SAEHzJ,GACCiH,OAAmB,qBACjBe,cAACY,IAECzO,MAAOwE,EAAKxE,MACZuK,MAAOA,GAHTsD,UACUrJ,EAAKxE,OADf6N,OADFf,c,MAeFyC,GAA8CvO,YAAD,OACjD6M,mCAAK2B,QAAQ,YAAYC,MAAM,UAAUC,OAAO,WAAc1O,G,SAC5D6M,sBACE8B,KAAK,eACL7N,EAAE,qD,cAKK8N,GAAcxB,gBAAMpN,YAC/B,IAAM6O,E,WDkiBoC,IAAb7O,EAAa,0DAClC+L,EAAkB4B,KAAlB5B,cACFU,EAASa,cAQf,cAEKvB,IAFL,CAGEwB,MAAOd,EAHT,QC5iBmBqC,CAAnB,GAEA,OAAOjC,cAACG,IAAO3J,uBAAUwL,cAGdE,GAA4C,SAAC,GAAD,IAAC,UAKxD,E,WDgkB2C,IAAb/O,EAAa,0DACnCwJ,EAAgBmE,KAAhBnE,YACFiD,EAASa,cAETlB,EAAUtF,uBAAY,kBAAM0C,EAAYxJ,EAAnB,SAAiC,CAC1DA,EAD0D,MAA5D,IAKA,UACEmL,IAAKnL,EADP,MAEEoM,UACAmB,MAAOd,EAAOhJ,cAHhB,GCzkByCuL,CAAgB,EAAD,CACtDhQ,QACAuK,MAPsD,EAExDA,OACGvJ,yBAEG,EAAN,EAAM,QAAWuN,EAAjB,EAAiBA,MAAjB,2BAMA,OACE0B,eAACC,qBAAQ3B,EAAWG,G,UAClBb,cAACsC,K,SAAUnQ,Q,GACX6N,cAACuC,KAAehD,QAASA,Q,eAKlBiD,GAAqBjC,gBAAMpN,YACtC,M,WDqiB2C,IAAbA,EAAa,4DACf2N,KAAtB,EADqC,EACrC,OAAUvF,EAD2B,EAC3BA,QACVgE,EAAUtF,uBAAY,kBAAMsB,GAAP,KAAyB,CAACA,EAArD,IACMqE,EAASa,cAEf,eAEEC,MAAOd,EAFT,OAGEL,YCviBEkD,CANJ,GAAM,EAAN,EAAM,MAAN,IAEEzM,YAFF,MAAM,KAAN,MAGE0M,iBAHF,MAAM,cAAN,MAIEC,YAJF,MAISjB,GAJT,6CAQA,OACE1B,cAAC4C,mBACC5M,KAAMA,E,aACM0M,EACZG,KAAM7C,cAAC2C,cACHjC,EACAoC,cAKGC,GAAexC,gBAAK,YAAC,IAAEZ,EAAF,EAAEA,SAClC,E,WDklB2C,IAAbxM,EAAa,4DACH2N,KAAlC,EADqC,EACnC3O,MAAsB4I,EADa,EACbA,MACxB6E,EAASa,cAEf,eAEE1F,QACAiI,gBACAtC,MAAOd,EAAO/I,eC1lB8CoM,CADf9P,mBACzC,EAAN,EAAM,QAAN,EAAM,cAAwB4H,EAA9B,EAA8BA,MAA9B,yCAIA,OACEqH,eAACc,qBAAQxC,EAAWyC,G,UACjBpI,IAAK,MACJiI,OADI,EACJA,OAAmB,qBACjBhD,cAACkC,IAEC/P,MAAOyE,EACP8F,MAAOA,GAHTsD,wBAFE,QAQLL,U,MAKMyD,GAAiB7C,gBAAMpN,YAClC,M,WDyd6C,IAAbA,EAAa,0DACvCyM,EAASa,cACf,eAEEC,MAAOd,EAAOlJ,WC7doB2M,CAApC,GAAQ3C,EAAR,EAAQA,MAAR,iBAEA,OACEV,cAACsD,qBAAW5C,EAAW6C,G,SACrBvD,cAACwC,qB,MAKMgB,GAAgBC,aAC3B,kBAAG9D,EAAH,EAAGA,SAAH,E,WDgkB4C,IAAbxM,EAAa,4DACjB2N,KAArB,EADsC,EACtC,OAAUjG,EAD4B,EAC5BA,OACV+E,EAASa,cAEf,cAEKxF,mBACD,iBAAO,CACL/I,IAAKM,EAAUW,EAAD,IAAY0H,EAAZ,iBAEhB,CAAC1H,EAAD,IAAY0H,EANhB,gBAQE7C,SACA0I,MAAOd,EAAOxJ,UC5kBqBsN,CAAiB,CAAExR,QAAhD,EADR,EACUA,IAAiBwO,EAD3B,EAC2BA,MAEzB,OACEV,cAAC2D,mBAAMzR,IAAK0R,EAAYC,GAAIP,KAAY5C,G,SACrCf,S,MAMImE,GAA0C,SAAC,OACtDpM,EADsD,EACtDA,MACGvE,iBAEH,OACEiP,eAAC1C,oBAAWvM,G,UACTuE,GAASsI,cAACM,I,SAAa5I,Q,GACxB0K,eAACoB,I,UACCxD,cAAC+C,I,SACC/C,cAAC+B,oB,GAEH/B,cAACoD,qB,GAEHpD,cAACkB,sB,ICzPD6C,GAAQC,YAAY,CACxBC,WAAY,CACVH,YAAaI,KAIXC,GAAqB,WAAO,IACxBC,EAAoBC,cAApBD,gBACFE,EAAWC,YAAkB,OAAQ,SAE3C,OACE,cAAC,IAAD,CAAMC,QAAQ,WAAWjQ,GAAI,EAA7B,SACE,cAAC,IAAD,CACEyB,KAAK,KACLd,QAAQ,QACR1B,MAAM,UACNiR,WAAW,IACXlF,QAAS6E,EALX,6BAMeE,EANf,cAwCA9L,GA7BQ,CACZ,YACA,YACA,YACA,SACA,YACA,cACA,cACA,UACA,cACA,WACA,aACA,gBACA,UACA,aACA,UACA,UACA,aACA,eACA,cACA,cACA,WACA,YACA,YACA,cACA,aACA,aAGoBkM,KAAI,SAAChN,GAAD,MAAY,CAAEA,QAAOvF,MAAOuF,EAAMiN,kBA0B7CC,GAxBH,WAAO,IAAD,EACU7K,mBAAS,IADnB,mBACT5H,EADS,KACF0S,EADE,KAGhB,OACE,qCACE,cAAC,IAAD,CAAiBC,iBAAiB,UAClC,cAAC,IAAD,CAAgBf,MAAOA,GAAvB,SACE,eAAC,IAAD,CAAQ1N,KAAK,QAAQ5C,EAAE,OAAvB,UACE,cAAC,GAAD,IACA,cAAC,IAAD,CAAQA,EAAE,OAAO8D,KAAK,IAAIwN,eAAe,SAAS5Q,WAAW,SAA7D,SACE,cAAC,GAAD,CACEhC,MAAOA,EACPqG,QAASA,GACTd,MAAM,iBACN2H,SAAU,SAAC2F,GAAD,OAAUH,EAASG,IAC7BjK,OAAK,eC7EnBkK,IAASC,OAAO,cAAC,GAAD,IAASpG,SAASqG,eAAe,W","file":"static/js/main.c14c9ced.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { isFunction } from \"./assertion\";\n\n/**\n * Creates a named context, provider, and hook.\n *\n * @param options create context options\n */\nexport function createContext(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var {\n    strict = true,\n    errorMessage = \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\",\n    name\n  } = options;\n  var Context = /*#__PURE__*/React.createContext(undefined);\n  Context.displayName = name;\n\n  function useContext() {\n    var context = React.useContext(Context);\n\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n\n    return context;\n  }\n\n  return [Context.Provider, useContext, Context];\n}\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\n\nexport function getValidChildren(children) {\n  return React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child));\n}\n\n/**\n * Assigns a value to a ref function or object\n *\n * @param ref the ref to assign to\n * @param value the value\n */\nexport function assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (isFunction(ref)) {\n    ref(value);\n    return;\n  }\n\n  try {\n    // @ts-ignore\n    ref.current = value;\n  } catch (error) {\n    throw new Error(\"Cannot assign value '\" + value + \"' to ref '\" + ref + \"'\");\n  }\n}\n/**\n * Combine multiple React refs into a single ref function.\n * This is used mostly when you need to allow consumers forward refs to\n * internal components\n *\n * @param refs refs to assign to value to\n */\n\nexport function mergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return value => {\n    refs.forEach(ref => assignRef(ref, value));\n  };\n}\n//# sourceMappingURL=react-helpers.js.map","// Number assertions\nexport function isNumber(value) {\n  return typeof value === \"number\";\n}\nexport var isNotNumber = value => typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value);\nexport function isNumeric(value) {\n  return value != null && value - parseFloat(value) + 1 >= 0;\n} // Array assertions\n\nexport function isArray(value) {\n  return Array.isArray(value);\n}\nexport var isEmptyArray = value => isArray(value) && value.length === 0; // Function assertions\n\nexport function isFunction(value) {\n  return typeof value === \"function\";\n} // Generic assertions\n\nexport var isDefined = value => typeof value !== \"undefined\" && value !== undefined;\nexport var isUndefined = value => typeof value === \"undefined\" || value === undefined; // Object assertions\n\nexport var isObject = value => {\n  var type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !isArray(value);\n};\nexport var isEmptyObject = value => isObject(value) && Object.keys(value).length === 0;\nexport function isNotEmptyObject(value) {\n  return value && !isEmptyObject(value);\n}\nexport var isNull = value => value == null; // String assertions\n\nexport function isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\nexport function isCssVar(value) {\n  return /^var\\(--.+\\)$/.test(value);\n} // Event assertions\n\nexport function isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n} // Empty assertions\n\nexport var isEmpty = value => {\n  if (isArray(value)) return isEmptyArray(value);\n  if (isObject(value)) return isEmptyObject(value);\n  if (value == null || value === \"\") return true;\n  return false;\n}; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport var __DEV__ = process.env.NODE_ENV !== \"production\";\nexport var isRefObject = val => \"current\" in val;\n//# sourceMappingURL=assertion.js.map","import { runIfFn } from \"@chakra-ui/utils\";\nexport { runIfFn };\nexport function mode(light, dark) {\n  return props => props.colorMode === \"dark\" ? dark : light;\n}\nexport function orient(options) {\n  var {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  if (!orientation) return {};\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\n//# sourceMappingURL=component.js.map","import { mode } from '@chakra-ui/theme-tools'\n\nconst parts = [\n  'item',\n  'selectedItem',\n  'list',\n  'selectedList',\n  'combobox',\n  'control',\n  'input',\n  'button',\n  'groupTitle',\n  'divider',\n  'label'\n]\n\nfunction baseStyleList(props: Record<string, any>) {\n  return {\n    bg: mode(`#fff`, `gray.700`)(props),\n    boxShadow: mode(`sm`, `dark-lg`)(props),\n    color: 'inherit',\n    w: 'full',\n    py: '2',\n    zIndex: 1,\n    borderRadius: 'md',\n    borderWidth: '1px',\n    maxH: '64',\n    overflowY: 'auto'\n  }\n}\n\nconst baseStyleSelectedList = {\n  d: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center'\n}\n\nconst baseStyleLabel = {\n  fontSize: 'md',\n  marginEnd: 3,\n  mb: 2,\n  fontWeight: 'medium',\n  transition: 'all 0.2s',\n  opacity: 1,\n  _disabled: {\n    opacity: 0.4\n  }\n}\n\nfunction baseStyleItem(props: Record<string, any>) {\n  return {\n    cursor: 'pointer',\n    transition: 'background 50ms ease-out',\n    _focus: {\n      bg: mode(`gray.100`, `whiteAlpha.100`)(props)\n    },\n    _active: {\n      bg: mode(`gray.100`, `whiteAlpha.100`)(props)\n    },\n    _expanded: {\n      bg: mode(`gray.100`, `whiteAlpha.100`)(props)\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: 'not-allowed'\n    }\n  }\n}\n\nfunction baseStyleSelectedItem(props: Record<string, any>) {\n  return {\n    borderRadius: 'full',\n    variant: 'solid',\n    colorscheme: props.colorscheme\n  }\n}\n\nfunction baseStyleButton(props: Record<string, any>) {\n  return {\n    variant: 'ghost',\n    _hover: {\n      bg: 'transparent'\n    },\n    _focus: {\n      bg: 'transparent'\n    },\n    _active: {\n      bg: 'transparent'\n    },\n    colorscheme: props.colorscheme\n  }\n}\n\nconst baseStyleControl = {\n  h: 'auto'\n}\n\nconst baseStyleInput = (_props: Record<string, any>) => ({\n  bgColor: 'transparent',\n  appearance: 'none',\n  flex: 1,\n  outline: 0\n})\n\nconst baseStyleCombobox = {\n  d: 'flex',\n  alignItems: 'center'\n}\n\nconst baseStyleGroupTitle = {\n  fontWeight: 'semibold'\n}\n\nconst baseStyleDivider = {\n  d: 'inline',\n  h: 'full',\n  border: 0,\n  borderColor: 'inherit',\n  my: 1,\n  opacity: 0.8\n}\n\nconst baseStyle = (props: Record<string, any>) => ({\n  list: baseStyleList(props),\n  selectedList: baseStyleSelectedList,\n  item: baseStyleItem(props),\n  selectedItem: baseStyleSelectedItem(props),\n  button: baseStyleButton(props),\n  combobox: baseStyleCombobox,\n  control: baseStyleControl,\n  input: baseStyleInput(props),\n  groupTitle: baseStyleGroupTitle,\n  divider: baseStyleDivider,\n  label: baseStyleLabel\n})\n\nexport const sizes = {\n  sm: {\n    control: {\n      minH: 8,\n      px: 1,\n      spacing: 1\n    },\n    input: {\n      m: 'px'\n    },\n    combobox: {\n      spacing: '1'\n    },\n    item: {\n      py: 1,\n      px: 2\n    },\n    selectedItem: {\n      m: 'px'\n    },\n    selectedList: {\n      py: 'px'\n    },\n    groupTitle: {\n      mx: 2,\n      my: 1,\n      fontSize: 'sm'\n    }\n  },\n  md: {\n    control: {\n      minH: 10,\n      px: 1,\n      spacing: 1\n    },\n    input: {\n      m: '2px'\n    },\n    combobox: {\n      spacing: '1'\n    },\n    item: {\n      py: 2,\n      px: 3\n    },\n    selectedItem: {\n      m: '2px'\n    },\n    selectedList: {\n      py: '2px'\n    },\n    groupTitle: {\n      mx: 4,\n      my: 2,\n      fontSize: 'sm'\n    }\n  },\n  lg: {\n    control: {\n      minH: 12,\n      px: 2,\n      spacing: 2\n    },\n    input: {\n      m: 1\n    },\n    combobox: {\n      spacing: '2'\n    },\n    item: {\n      py: 2,\n      px: 3\n    },\n    selectedItem: {\n      m: 1\n    },\n    selectedList: {\n      py: 1\n    },\n    groupTitle: {\n      mx: 4,\n      my: 2,\n      fontSize: 'sm'\n    }\n  }\n}\n\nexport default {\n  defaultProps: {\n    size: 'md'\n  },\n  parts,\n  sizes,\n  baseStyle\n}\n","import {\n  usePopper,\n  UsePopperProps,\n  UsePopperReturn,\n  useStyles\n} from '@chakra-ui/react'\nimport { createContext, mergeRefs, EventKeys } from '@chakra-ui/utils'\nimport {\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n  useMemo,\n  MutableRefObject\n} from 'react'\n\nexport interface Option {\n  label: string\n  value: string | number\n}\n\nexport interface SelectState {\n  searchValue: string\n  resolvedSearchValue: string\n  isOpen: boolean\n  highlightedIndex: number\n}\n\ntype AnyFunc = (...args: any[]) => any\n\nexport interface KeyMeta {\n  key?: EventKeys\n  keyCode?: EventKeys\n  shift?: boolean\n  meta?: boolean\n}\n\nexport type KeyboardEventHandler = (e: KeyboardEvent) => void\n\nexport type KeyHandler = () => void\n\nexport type ScrollToIndex = (index: number) => void\n\nexport type GetDebounce = (options: Option[]) => number\n\nexport type SelectOnChange = (\n  value: string | number | Array<string | number>,\n  current?: string | number\n) => void\n\nexport type SelectFilter = (\n  options: Option[],\n  searchValue: string | number\n) => Option[]\n\nexport type SelectRemoveValue = (index: number) => void\n\nexport type SelectSetOpen = (open: boolean) => void\n\nexport type SelectSetSearch = (searchValue: string) => void\n\nexport type GetCreateLabel = (searchValue: string) => string\n\nexport enum SelectActions {\n  SetOpen = 'setOpen', // eslint-disable-line\n  SetSearch = 'setSearch', // eslint-disable-line\n  HighlightIndex = 'highlightIndex' // eslint-disable-line\n}\n\nexport type SelectStateUpdater = (\n  updater: (old: SelectState) => SelectState,\n  action: SelectActions\n) => void\n\nexport type StateReducer = (\n  old: SelectState,\n  newState: SelectState,\n  action: SelectActions\n) => SelectState\n\nconst defaultMultiValue: any[] = []\nconst defaultOptions: Option[] = []\n\nconst initialState: SelectState = {\n  searchValue: '',\n  resolvedSearchValue: '',\n  isOpen: false,\n  highlightedIndex: 0\n}\n\nconst defaultStateReducer: StateReducer = (_, newState) => newState\nconst defaultGetCreateLabel: GetCreateLabel = (d) => `Create \"${d}\"`\nconst defaultScrollToIndex: ScrollToIndex = () => {}\nconst defaultGetDebounce: GetDebounce = (options) =>\n  options.length > 10000 ? 1000 : options.length > 1000 ? 200 : 0\n\nconst defaultFilterFn: SelectFilter = (options, searchValue) => {\n  return options\n    .filter((option) =>\n      option.value\n        .toString()\n        .toLowerCase()\n        .includes(searchValue.toString().toLowerCase())\n    )\n    .sort((a) => {\n      return a.value\n        .toString()\n        .toLowerCase()\n        .indexOf(searchValue.toString().toLowerCase())\n    })\n}\n\nfunction useDebounce(fn: AnyFunc, time = 0) {\n  const ref = useRef(null)\n  const fnRef = useRef()\n\n  fnRef.current = fn as any\n\n  useEffect(() => {\n    return () => {\n      clearTimeout((ref.current as unknown) as number)\n    }\n  }, [time])\n\n  return useCallback(\n    async (...args) => {\n      if (ref.current) {\n        clearTimeout((ref.current as unknown) as number)\n      }\n      return new Promise((resolve, reject) => {\n        ref.current = setTimeout(() => {\n          ref.current = null\n          try {\n            resolve(((fnRef.current as unknown) as AnyFunc)(...args))\n          } catch (err) {\n            reject(err)\n          }\n        }, time) as any\n      })\n    },\n    [time]\n  )\n}\n\nfunction useHoistedState(\n  initialState: SelectState,\n  reducer: StateReducer\n): [SelectState, SelectStateUpdater] {\n  const reducerRef = useRef()\n  ;(reducerRef.current as any) = reducer\n  const [state, _setState] = useState(initialState)\n  const setState = useCallback(\n    (updater, action) => {\n      if (!action) {\n        throw new Error('An action type is required to update the state')\n      }\n      return _setState((old: SelectState) =>\n        ((reducerRef.current as unknown) as StateReducer)(\n          old,\n          updater(old),\n          action\n        )\n      )\n    },\n    [_setState]\n  )\n  return [state, setState]\n}\n\nconst useKeys = (\n  userKeys: {\n    [K in EventKeys]: (opts: { shift: any; meta: any }, e?: any) => K | any\n  }\n) => {\n  return ({ onKeyDown, ...rest } = {} as any) => {\n    return {\n      ...rest,\n      onKeyDown: (e: KeyboardEvent) => {\n        const { keyCode, key, shiftKey: shift, metaKey: meta } = e\n        const handler = userKeys[key] || userKeys[keyCode]\n        if (handler) {\n          handler(\n            {\n              keyCode,\n              key,\n              shift,\n              meta\n            },\n            e\n          )\n        }\n        if (onKeyDown) {\n          onKeyDown(e)\n        }\n      }\n    }\n  }\n}\n\nexport interface UseSelectProps extends UsePopperProps {\n  onChange: SelectOnChange\n  multi?: boolean\n  create?: boolean\n  duplicates?: boolean\n  options?: Option[]\n  value?: any\n  shiftAmount?: number\n  getCreateLabel?: GetCreateLabel\n  getDebounce?: GetDebounce\n  stateReducer?: StateReducer\n  scrollToIndex?: ScrollToIndex\n  filterFn?: SelectFilter\n}\nexport interface UseSelectReturn {\n  value: any\n  multi: boolean\n  searchValue: string\n  isOpen: boolean\n  highlightedIndex: number\n  selectedOption: Option\n  visibleOptions: Option[]\n  selectIndex: (index: number) => any\n  highlightIndex: (value: any) => any\n  removeValue: SelectRemoveValue\n  setOpen: SelectSetOpen\n  setSearch: SelectSetSearch\n  popper: UsePopperReturn\n  getInputProps: AnyFunc\n  getOptionProps: AnyFunc\n  optionsRef: MutableRefObject<any>\n}\n\nconst [SelectProvider, useSelectContext] = createContext<UseSelectReturn>({\n  strict: false,\n  name: 'SelectContext'\n})\n\nexport { SelectProvider, useSelectContext }\n\nexport function useSelect({\n  multi,\n  create,\n  getCreateLabel = defaultGetCreateLabel,\n  getDebounce = defaultGetDebounce,\n  stateReducer = defaultStateReducer,\n  filterFn = defaultFilterFn,\n  scrollToIndex = defaultScrollToIndex,\n  shiftAmount = 5,\n  duplicates,\n  options,\n  value,\n  onChange,\n  placement = 'bottom-start'\n}: UseSelectProps): UseSelectReturn {\n  const [\n    { searchValue, resolvedSearchValue, isOpen, highlightedIndex },\n    setState\n  ] = useHoistedState(initialState, stateReducer)\n\n  // Refs\n\n  const optionsRef = useRef()\n  const inputRef = useRef()\n  const onBlurRef = useRef({})\n  const onChangeRef = useRef()\n  const filterFnRef = useRef()\n  const getCreateLabelRef = useRef()\n  const scrollToIndexRef = useRef()\n\n  const popper = usePopper({\n    placement\n  })\n\n  ;(filterFnRef.current as any) = filterFn\n  ;(scrollToIndexRef.current as any) = scrollToIndex\n  ;(getCreateLabelRef.current as any) = getCreateLabel\n  ;(onChangeRef.current as any) = onChange\n\n  // Multi should always at least have an empty array as the value\n  if (multi && typeof value === 'undefined') {\n    value = defaultMultiValue\n  }\n\n  // If no options are provided, then use an empty array\n  if (!options) {\n    options = defaultOptions\n  }\n\n  const originalOptions = options\n\n  // If multi and duplicates aren't allowed, filter out the\n  // selected options from the options list\n  options = useMemo(() => {\n    if (multi && !duplicates) {\n      return options?.filter((d) => !value.includes(d.value))\n    }\n    return options\n  }, [options, value, duplicates, multi])\n\n  // Compute the currently selected option(s)\n  const selectedOption = useMemo(() => {\n    if (!multi) {\n      return (\n        originalOptions.find((d) => d.value === value) || {\n          label: value,\n          value: value\n        }\n      )\n    } else {\n      return value.map(\n        (val: string | number) =>\n          originalOptions.find((d) => d.value === val) || {\n            label: val,\n            value: val\n          }\n      )\n    }\n  }, [multi, value, originalOptions])\n\n  // If there is a search value, filter the options for that value\n  // TODO: This is likely where we will perform async option fetching\n  // in the future.\n  options = useMemo(() => {\n    if (resolvedSearchValue) {\n      return (filterFnRef.current as any)?.(options, resolvedSearchValue)\n    }\n    return options\n  }, [options, resolvedSearchValue])\n\n  // If in create mode and we have a search value, fabricate\n  // an option for that searchValue and prepend it to options\n  options = useMemo(() => {\n    if (create && searchValue) {\n      return [\n        {\n          label: (getCreateLabelRef.current as any)?.(searchValue),\n          value: searchValue\n        },\n        ...options!\n      ]\n    }\n    return options\n  }, [create, searchValue, options])\n\n  // Actions\n\n  const setOpen = useCallback(\n    (newIsOpen) => {\n      setState(\n        (old) => ({\n          ...old,\n          isOpen: newIsOpen\n        }),\n        SelectActions.SetOpen\n      )\n    },\n    [setState]\n  )\n\n  const setResolvedSearch = useDebounce((value) => {\n    setState(\n      (old) => ({\n        ...old,\n        resolvedSearchValue: value\n      }),\n      SelectActions.SetSearch\n    )\n  }, getDebounce(options!))\n\n  const setSearch = useCallback(\n    (value) => {\n      setState(\n        (old) => ({\n          ...old,\n          searchValue: value\n        }),\n        SelectActions.SetSearch\n      )\n      setResolvedSearch(value)\n    },\n    [setState, setResolvedSearch]\n  )\n\n  const highlightIndex = useCallback(\n    (value) => {\n      setState((old) => {\n        return {\n          ...old,\n          highlightedIndex: Math.min(\n            Math.max(\n              0,\n              typeof value === 'function' ? value(old.highlightedIndex) : value\n            ),\n            options!.length - 1\n          )\n        }\n      }, SelectActions.HighlightIndex)\n    },\n    [options, setState]\n  )\n\n  const selectIndex = useCallback(\n    (index) => {\n      const option = options![index]\n      if (option) {\n        if (!multi) {\n          ;(onChangeRef.current as any)?.(option.value)\n        } else {\n          if (duplicates || !value.includes(option.value)) {\n            ;(onChangeRef.current as any)?.(\n              [...value, option.value],\n              option.value\n            )\n          }\n        }\n      }\n\n      if (!multi) {\n        setOpen(false)\n      } else {\n        setSearch('')\n      }\n    },\n    [multi, options, duplicates, value, setOpen, setSearch]\n  )\n\n  const removeValue = useCallback(\n    (index) => {\n      ;(onChangeRef.current as any)(\n        value.filter((_: string, i: number) => i !== index)\n      )\n    },\n    [value]\n  )\n\n  // Handlers\n\n  const handleSearchValueChange = (e: any) => {\n    setSearch(e.target.value)\n    setOpen(true)\n  }\n\n  const handleSearchClick = () => {\n    if (!create || multi) {\n      setSearch('')\n    }\n    setOpen(true)\n  }\n\n  const handleSearchFocus = () => handleSearchClick()\n\n  // Prop Getters\n\n  const ArrowUp = (defaultShift?: any, defaultMeta?: any) => (\n    { shift, meta }: any,\n    e: any\n  ) => {\n    e.preventDefault()\n    const amount =\n      defaultMeta || meta\n        ? 1000000000000\n        : defaultShift || shift\n        ? shiftAmount - 1\n        : 1\n    setOpen(true)\n    highlightIndex((old: number) => old - amount)\n  }\n\n  const ArrowDown = (defaultShift?: any, defaultMeta?: any) => (\n    { shift, meta }: any,\n    e: any\n  ) => {\n    e.preventDefault()\n    const amount =\n      defaultMeta || meta\n        ? 1000000000000\n        : defaultShift || shift\n        ? shiftAmount - 1\n        : 1\n    setOpen(true)\n    highlightIndex((old: number) => old + amount)\n  }\n\n  const Enter = (_: any, e: any) => {\n    if (isOpen) {\n      if (searchValue || options![highlightedIndex]) {\n        e.preventDefault()\n      }\n      if (options![highlightedIndex]) {\n        selectIndex(highlightedIndex)\n      }\n    }\n  }\n\n  const Escape = () => {\n    setOpen(false)\n  }\n\n  const Tab = () => {\n    setOpen(false)\n  }\n\n  const Backspace = () => {\n    if (!multi || searchValue) {\n      return\n    }\n    removeValue(value.length - 1)\n  }\n\n  const getKeyProps = useKeys({\n    ArrowUp: ArrowUp(),\n    ArrowDown: ArrowDown(),\n    PageUp: ArrowUp(true),\n    PageDown: ArrowDown(true),\n    Home: ArrowUp(false, true),\n    End: ArrowDown(false, true),\n    Enter,\n    Escape,\n    Tab,\n    Backspace\n  } as any)\n\n  const getInputProps = (\n    {\n      refKey = 'ref',\n      ref,\n      onChange,\n      onFocus,\n      onClick,\n      onBlur,\n      ...rest\n    } = {} as any\n  ) => {\n    return getKeyProps({\n      [refKey]: (el: HTMLElement) => {\n        ;(inputRef.current as any) = el\n        if (ref) {\n          ref.current = el\n        }\n      },\n      value:\n        (isOpen ? searchValue : selectedOption ? selectedOption.label : '') ||\n        '',\n      onChange: (e: any) => {\n        handleSearchValueChange(e)\n        if (onChange) {\n          onChange(e)\n        }\n      },\n      onFocus: (e: any) => {\n        handleSearchFocus()\n        if (onFocus) {\n          onFocus(e)\n        }\n      },\n      onClick: (e: any) => {\n        handleSearchClick()\n        if (onClick) {\n          onClick(e)\n        }\n      },\n      onBlur: (e: any) => {\n        if (onBlur) {\n          e.persist()\n          ;(onBlurRef.current as any).cb = onBlur\n          ;(onBlurRef.current as any).event = e\n        }\n      },\n      ...rest\n    })\n  }\n\n  const getOptionProps = (\n    { index, key = index, onClick, onMouseEnter, ...rest } = {} as any\n  ) => {\n    if (typeof index !== 'number' || index < 0) {\n      throw new Error(\n        `useSelect: The getOptionProps prop getter requires an index property, eg. 'getOptionProps({index: 1})'`\n      )\n    }\n\n    return {\n      key,\n      ...rest,\n      onClick: (e: any) => {\n        selectIndex(index)\n        if (onClick) {\n          onClick(e)\n        }\n      },\n      onMouseEnter: (e: any) => {\n        highlightIndex(index)\n        if (onMouseEnter) {\n          onMouseEnter(e)\n        }\n      }\n    }\n  }\n\n  // Effects\n\n  // When the user clicks outside of the options box\n  // while open, we need to close the dropdown\n  useClickOutsideRef(\n    isOpen,\n    () => {\n      setOpen(false)\n    },\n    optionsRef!\n  )\n\n  // When searching, activate the first option\n  useEffect(() => {\n    highlightIndex(0)\n  }, [searchValue, highlightIndex])\n\n  // When we open and close the options, set the highlightedIndex to 0\n  useEffect(() => {\n    highlightIndex(0)\n\n    if (!isOpen && (onBlurRef.current as any)?.event) {\n      ;(onBlurRef.current as any)?.cb((onBlurRef.current as any).event)\n      ;(onBlurRef.current as any).event = null\n    }\n  }, [isOpen, highlightIndex])\n\n  // When the highlightedIndex changes, scroll to that item\n  useEffect(() => {\n    ;(scrollToIndexRef.current as any)?.(highlightedIndex)\n  }, [highlightedIndex])\n\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      setTimeout(() => {\n        ;(inputRef.current as any)?.focus()\n      })\n    }\n  }, [isOpen, inputRef.current])\n\n  return {\n    multi: !!multi,\n    optionsRef,\n    popper,\n    // State\n    value,\n    searchValue,\n    isOpen,\n    highlightedIndex,\n    selectedOption,\n    visibleOptions: options!,\n    // Actions\n    selectIndex,\n    removeValue,\n    setOpen,\n    setSearch,\n    highlightIndex,\n    // Prop Getters\n    getInputProps,\n    getOptionProps\n  }\n}\n\nfunction useClickOutsideRef(\n  enable: boolean,\n  fn: AnyFunc,\n  userRef: MutableRefObject<any>\n) {\n  const localRef = useRef()\n  const fnRef = useRef()\n\n  ;(fnRef.current as any) = fn\n  const elRef =\n    userRef || ((localRef as unknown) as MutableRefObject<HTMLElement>)\n\n  const handle = useCallback(\n    (e) => {\n      const isTouch = e.type === 'touchstart'\n      if (e.type === 'click' && isTouch) {\n        return\n      }\n      const el = elRef.current as HTMLElement\n      if (el && !el.contains(e.target)) {\n        ;(fnRef.current as any)(e)\n      }\n    },\n    [elRef]\n  )\n\n  useEffect(() => {\n    if (enable) {\n      document.addEventListener('touchstart', handle, true)\n      document.addEventListener('click', handle, true)\n    }\n\n    return () => {\n      document.removeEventListener('touchstart', handle, true)\n      document.removeEventListener('click', handle, true)\n    }\n  }, [enable, handle])\n}\n\nexport function useSelectCombobox(props: any = {}) {\n  const styles = useStyles()\n  return {\n    ...props,\n    __css: styles.combobox\n  }\n}\n\nexport function useSelectInput(props: any = {}) {\n  const { getInputProps } = useSelectContext()\n  const styles = useStyles()\n\n  // const onClick = useCallback(() => {\n  //   if (openMenuOnInputFocus) {\n  //     openMenu()\n  //   }\n  // }, [openMenuOnInputFocus, openMenu])\n\n  return {\n    ...props,\n    ...getInputProps(),\n    __css: styles.input\n    // onClick\n  }\n}\nexport function useSelectLabel(props: any = {}) {\n  // const {getLabelProps } = useSelectContext()\n  const styles = useStyles()\n\n  return {\n    ...props,\n    // ...useMemo(getLabelProps!, [getLabelProps]),\n    __css: styles.label\n  }\n}\n\nexport function useSelectButton(props: any = {}) {\n  const { isOpen, setOpen } = useSelectContext()\n  const onClick = useCallback(() => setOpen(!isOpen), [setOpen, isOpen])\n  const styles = useStyles()\n\n  return {\n    ...props,\n    __css: styles.button,\n    onClick\n  }\n}\n\nexport function useSelectedItem(props: any = {}) {\n  const { removeValue } = useSelectContext()\n  const styles = useStyles()\n\n  const onClick = useCallback(() => removeValue(props.index), [\n    props.index,\n    removeValue\n  ])\n\n  return {\n    key: props.value,\n    onClick,\n    __css: styles.selectedItem,\n    ...props\n  }\n}\n\nexport function useSelectItem(props: any = {}) {\n  const { getOptionProps, highlightedIndex } = useSelectContext()\n  const styles = useStyles()\n  const highlighted = highlightedIndex === props.index\n\n  return {\n    ...props,\n    ...useMemo(\n      () => ({\n        ...getOptionProps!({\n          option: { value: props.value },\n          index: props.index\n        }),\n        __css: {\n          ...styles.item,\n          ...(highlighted && (styles.item as any))?._active\n        }\n      }),\n      [getOptionProps, props.value, props.index, styles.item]\n    )\n  }\n}\n\nexport function useSelectList(props: any = {}) {\n  const { isOpen, optionsRef, popper, visibleOptions } = useSelectContext()\n  const styles = useStyles()\n\n  return {\n    ...props,\n    ref: mergeRefs(optionsRef, popper.popperRef),\n    isOpen,\n    visibleOptions,\n    __css: styles.list\n  }\n}\n\nexport function useSelectedList(props: any = {}) {\n  const { value: selectedItems, multi } = useSelectContext()\n  const styles = useStyles()\n\n  return {\n    ...props,\n    multi,\n    selectedItems,\n    __css: styles.selectedList\n  }\n}\n\nexport function useSelectControl(props: any = {}) {\n  const { isOpen, popper } = useSelectContext()\n  const styles = useStyles()\n\n  return {\n    ...props,\n    ...useMemo(\n      () => ({\n        ref: mergeRefs(props.ref, popper.referenceRef)\n      }),\n      [props.ref, popper.referenceRef]\n    ),\n    isOpen,\n    __css: styles.control\n  }\n}\n","import {\n  HTMLChakraProps,\n  MenuOptionGroup,\n  MenuProps,\n  Input,\n  MenuListProps,\n  MenuOptionGroupProps,\n  Box,\n  IconButton,\n  chakra,\n  HStack,\n  omitThemingProps,\n  useMultiStyleConfig,\n  StylesProvider,\n  forwardRef,\n  Tag,\n  TagLabel,\n  TagCloseButton,\n  TagProps\n} from '@chakra-ui/react'\nimport { memo, ReactNode, useMemo } from 'react'\nimport { PropsOf } from '@emotion/react'\nimport {\n  SelectProvider,\n  useSelect,\n  useSelectButton,\n  useSelectCombobox,\n  useSelectControl,\n  useSelectInput,\n  useSelectedItem,\n  useSelectItem,\n  useSelectLabel,\n  useSelectList,\n  useSelectedList,\n  UseSelectProps\n} from './use-select'\n\n// @see https://github.com/chakra-ui/chakra-ui/issues/140\n\nexport interface SelectItem {\n  value: any\n  label?: string\n}\n\nexport interface SelectProps\n  extends Omit<\n      HTMLChakraProps<'select'>,\n      'value' | 'size' | 'onChange' | 'onSelect' | 'children'\n    >,\n    Omit<MenuProps, 'children'>,\n    UseSelectProps {\n  label?: string\n  children?: ReactNode\n}\n\nexport interface SelectControlProps\n  extends Omit<HTMLChakraProps<'select'>, 'size'>,\n    Omit<MenuProps, 'children'> {\n  defaultIsOpen?: boolean\n  isLazy?: true\n  closeOnSelect?: false\n  children?: ReactNode\n}\n\nexport interface SelectListProps extends MenuListProps {}\nexport interface SelectOptionGroupProps extends MenuOptionGroupProps {}\nexport interface SelectOptionItemProps extends HTMLChakraProps<'li'> {\n  highlighted?: boolean\n  index: number\n}\n\nexport interface SelectedItemProps extends TagProps, SelectItem {\n  index: number\n}\n\nexport interface MultiSelectProps extends Omit<SelectProps, 'children'> {\n  children?: ReactNode\n}\n\nexport const Select: React.FC<SelectProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig('MultiSelect', props)\n  const ownProps = omitThemingProps(props)\n\n  const ctx = useSelect(ownProps as any)\n  const context = useMemo(() => ctx, [ctx])\n\n  return (\n    <SelectProvider value={context}>\n      <StylesProvider value={styles}>\n        <chakra.div pos='relative'>{children}</chakra.div>\n      </StylesProvider>\n    </SelectProvider>\n  )\n}\n\nexport const SelectLabel = memo<HTMLChakraProps<'label'>>((props) => {\n  const labelProps = useSelectLabel()\n\n  return <chakra.label {...props} {...labelProps} />\n})\n\nexport const SelectOptionItem: React.FC<SelectOptionItemProps> = ({\n  value,\n  index,\n  ...props\n}) => {\n  const itemProps = useSelectItem({ value, index })\n\n  return (\n    <chakra.li {...props} {...itemProps}>\n      {value}\n    </chakra.li>\n  )\n}\n\nexport const SelectList = memo(() => {\n  const {\n    __css,\n    visibleOptions,\n    isOpen,\n    ref: listRef,\n    ...listProps\n  } = useSelectList({})\n\n  return (\n    <chakra.ul\n      ref={listRef}\n      __css={{\n        listStyle: 'none',\n        position: 'absolute',\n        ...(!isOpen && { display: 'none' }),\n        ...__css\n      }}\n      {...listProps}\n    >\n      {isOpen &&\n        visibleOptions.map((item: any, index: number) => (\n          <SelectOptionItem\n            key={`${item.value}${index}`}\n            value={item.value}\n            index={index}\n          />\n        ))}\n    </chakra.ul>\n  )\n})\n\nexport const SelectOptionGroup: React.FC<SelectOptionGroupProps> = (props) => {\n  return <MenuOptionGroup {...props} />\n}\n\nconst SelectToggleIcon: React.FC<PropsOf<'svg'>> = (props) => (\n  <svg viewBox='0 0 24 24' width='1.25rem' height='1.25rem' {...props}>\n    <path\n      fill='currentColor'\n      d='M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z'\n    />\n  </svg>\n)\n\nexport const SelectInput = memo((props) => {\n  const inputProps = useSelectInput(props)\n\n  return <chakra.input {...inputProps} />\n})\n\nexport const SelectedItem: React.FC<SelectedItemProps> = ({\n  value,\n  index,\n  ...props\n}) => {\n  const { onClick, __css, ...itemProps } = useSelectedItem({\n    value,\n    index,\n    ...props\n  })\n\n  return (\n    <Tag {...__css} {...itemProps}>\n      <TagLabel>{value}</TagLabel>\n      <TagCloseButton onClick={onClick} />\n    </Tag>\n  )\n}\n\nexport const SelectToggleButton = memo((props) => {\n  const {\n    __css,\n    size = 'sm',\n    ariaLabel = 'toggle menu',\n    Icon = SelectToggleIcon,\n    ...buttonProps\n  } = useSelectButton(props)\n\n  return (\n    <IconButton\n      size={size}\n      aria-label={ariaLabel}\n      icon={<Icon />}\n      {...__css}\n      {...buttonProps}\n    />\n  )\n})\n\nexport const SelectedList = memo(({ children, ...props }) => {\n  const { __css, selectedItems, multi, ...selectedListProps } = useSelectedList(\n    props\n  )\n\n  return (\n    <Box {...__css} {...selectedListProps}>\n      {multi &&\n        selectedItems?.map((selectedItem: any, index: number) => (\n          <SelectedItem\n            key={`selected-item-${index}`}\n            value={selectedItem}\n            index={index}\n          />\n        ))}\n      {children}\n    </Box>\n  )\n})\n\nexport const SelectCombobox = memo((props) => {\n  const { __css, ...comboboxProps } = useSelectCombobox(props)\n\n  return (\n    <HStack {...__css} {...comboboxProps}>\n      <SelectToggleButton />\n    </HStack>\n  )\n})\n\nexport const SelectControl = forwardRef<SelectControlProps, 'div'>(\n  ({ children }, ref) => {\n    const { ref: controlRef, __css } = useSelectControl({ ref })\n\n    return (\n      <Input ref={controlRef} as={HStack} {...__css}>\n        {children}\n      </Input>\n    )\n  }\n)\n\nexport const MultiSelect: React.FC<MultiSelectProps> = ({\n  label,\n  ...props\n}) => {\n  return (\n    <Select {...props}>\n      {label && <SelectLabel>{label}</SelectLabel>}\n      <SelectControl>\n        <SelectedList>\n          <SelectInput />\n        </SelectedList>\n        <SelectCombobox />\n      </SelectControl>\n      <SelectList />\n    </Select>\n  )\n}\n","import {\n  ChakraProvider,\n  ColorModeScript,\n  useColorMode,\n  useColorModeValue,\n  extendTheme,\n  Button,\n  Flex,\n  VStack\n} from '@chakra-ui/react'\nimport { MultiSelect, MultiSelectTheme } from 'chakra-multiselect'\nimport { useState } from 'react'\n\nconst theme = extendTheme({\n  components: {\n    MultiSelect: MultiSelectTheme\n  }\n})\n\nconst ColorModeToggleBar = () => {\n  const { toggleColorMode } = useColorMode()\n  const nextMode = useColorModeValue('dark', 'light')\n\n  return (\n    <Flex justify='flex-end' mb={4}>\n      <Button\n        size='md'\n        variant='ghost'\n        color='current'\n        marginLeft='2'\n        onClick={toggleColorMode}\n      >{`Switch to ${nextMode} mode`}</Button>\n    </Flex>\n  )\n}\n\nconst items = [\n  'Neptunium',\n  'Plutonium',\n  'Americium',\n  'Curium',\n  'Berkelium',\n  'Californium',\n  'Einsteinium',\n  'Fermium',\n  'Mendelevium',\n  'Nobelium',\n  'Lawrencium',\n  'Rutherfordium',\n  'Dubnium',\n  'Seaborgium',\n  'Bohrium',\n  'Hassium',\n  'Meitnerium',\n  'Darmstadtium',\n  'Roentgenium',\n  'Copernicium',\n  'Nihonium',\n  'Flerovium',\n  'Moscovium',\n  'Livermorium',\n  'Tennessine',\n  'Oganesson'\n]\n\nconst options = items.map((label) => ({ label, value: label.toLowerCase() }))\n\nconst App = () => {\n  const [value, setValue] = useState([])\n\n  return (\n    <>\n      <ColorModeScript initialColorMode='light' />\n      <ChakraProvider theme={theme}>\n        <VStack minH='100vh' w='full'>\n          <ColorModeToggleBar />\n          <VStack w='full' flex='1' justifyContent='center' alignItems='center'>\n            <MultiSelect\n              value={value}\n              options={options}\n              label='Choose an item'\n              onChange={(next) => setValue(next as any)}\n              multi\n            />\n          </VStack>\n        </VStack>\n      </ChakraProvider>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}